var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/NgxToastComponent.html",[0,1.075,1,1.075]],["body/components/NgxToastComponent.html",[0,2.015,1,1.873,2,0.787,3,0.787,4,2.432,5,2.432,6,2.432,7,0.552,8,0.529,9,0.671,10,2.432,11,1.079,12,1.732,13,1.609,14,1.609,15,1.609,16,1.754,17,4.569,18,2.018,19,3.63,20,3.239,21,3.118,22,3.925,23,0.552,24,2.549,25,3.63,26,4.332,27,3.118,28,0.781,29,1.114,30,1.308,31,3.061,32,1.46,33,1.776,34,3.061,35,3.925,36,3.061,37,3.925,38,3.118,39,3.925,40,3.925,41,3.925,42,1.308,43,3.925,44,1.255,45,0.06,46,1.776,47,0.787,48,0.664,49,1.079,50,1.009,51,0.664,52,2.018,53,0.664,54,0.449,55,3.061,56,3.061,57,3.061,58,3.061,59,1.708,60,3.118,61,3.118,62,3.118,63,3.63,64,2.432,65,2.432,66,1.255,67,2.018,68,2.432,69,0.044,70,0.044]],["title/components/NgxToastnComponent.html",[0,1.075,66,1.075]],["body/components/NgxToastnComponent.html",[0,1.765,1,0.71,2,0.445,3,0.445,4,1.376,5,1.376,6,1.376,7,0.312,8,0.548,9,0.695,11,0.927,12,1.773,16,0.61,18,1.142,19,3.034,20,2.754,21,2.09,23,0.312,24,1.982,25,2.822,27,2.822,28,0.811,29,1.176,30,1.443,32,1.153,38,2.09,42,1.073,44,1.648,45,0.061,46,1.765,47,1.034,48,0.907,49,1.417,50,0.818,51,0.376,52,1.142,53,0.376,54,0.254,59,0.966,60,2.09,61,2.09,62,2.822,63,2.822,64,1.376,65,1.376,66,1.456,67,2.096,68,1.376,69,0.03,70,0.03,71,1.376,72,1.566,73,1.078,74,2.09,75,3.181,76,2.631,77,1.456,78,1.713,79,3.552,80,1.121,81,1.874,82,2.631,83,1.417,84,1.517,85,1.456,86,4.022,87,1.142,88,1.376,89,0.64,90,3.181,91,0.77,92,2.631,93,0.927,94,1.417,95,2.631,96,2.631,97,1.732,98,2.631,99,3.552,100,0.677,101,1.078,102,1.566,103,2.631,104,1.732,105,1.078,106,1.472,107,1.732,108,1.765,109,1.078,110,2.09,111,1.732,112,2.631,113,1.732,114,3.181,115,2.631,116,2.631,117,1.304,118,2.631,119,2.631,120,1.732,121,1.078,122,1.517,123,2.631,124,2.631,125,2.631,126,1.251,127,2.631,128,2.631,129,1.078,130,2.631,131,1.078,132,2.631,133,1.251,134,1.332,135,1.732,136,1.713,137,1.808,138,1.648,139,1.808,140,1.9,141,1.732,142,1.456,143,2.631,144,2.631,145,1.732,146,1.732,147,1.732,148,1.732,149,0.523,150,0.71,151,0.794,152,0.61,153,1.732,154,1.732,155,1.732,156,0.71,157,0.71,158,0.71,159,1.732,160,1.732,161,1.732,162,1.732,163,0.61,164,0.61,165,0.61,166,1.732,167,1.732,168,0.71,169,1.732,170,3.181,171,1.732,172,1.304,173,2.631,174,2.631,175,1.732,176,1.732,177,1.732,178,1.732,179,1.732,180,1.732,181,2.631,182,1.732,183,1.732,184,1.732,185,0.61,186,1.732,187,1.732,188,1.732,189,1.732,190,1.732,191,0.71,192,1.078,193,0.71,194,1.078,195,1.732,196,0.71,197,2.631,198,2.631,199,1.732,200,2.631,201,2.631,202,2.631,203,1.732,204,0.61,205,0.71,206,1.732,207,0.71,208,1.732,209,1.732]],["title/modules/NgxToastnModule.html",[210,1.251,211,1.463]],["body/modules/NgxToastnModule.html",[1,2.12,2,0.835,3,0.835,7,0.586,8,0.376,9,0.477,20,2.934,45,0.06,48,0.704,50,1.281,51,0.704,52,2.14,53,1.043,54,0.477,59,1.812,66,2.12,69,0.046,70,0.046,80,1.144,89,0.898,91,0.884,207,2.065,210,1.944,211,2.917,212,1.812,213,3.537,214,1.144,215,2.58,216,2.58,217,2.58,218,2.58,219,2.342,220,3.237,221,2.58,222,2.14,223,2.14,224,4.075,225,4.453,226,3.248,227,4.075,228,2.58,229,3.248,230,3.248,231,2.273,232,2.58,233,2.58,234,3.248]],["title/injectables/NgxToastnService.html",[91,0.569,235,0.473]],["body/injectables/NgxToastnService.html",[2,0.921,3,0.338,7,0.237,8,0.534,9,0.677,11,1.262,12,1.71,13,1.092,14,0.539,15,1.373,16,0.463,23,0.237,24,1.182,28,0.906,29,0.685,30,1.379,32,1.183,33,1.252,42,1.222,44,1.741,45,0.061,46,1.741,47,1.272,48,1,49,1.608,50,0.786,51,0.285,53,0.817,54,0.492,69,0.024,70,0.024,72,1.906,73,0.539,77,1.373,78,1.828,80,0.938,81,0.869,83,1.076,84,1.262,85,1.252,87,0.866,88,1.044,89,0.604,91,0.578,93,1.591,94,1.731,100,0.969,101,0.869,102,1.741,105,0.869,106,1.693,108,1.373,109,0.539,117,0.539,121,0.539,122,0.938,126,0.747,129,0.539,131,0.539,133,1.608,134,1.012,136,1.092,137,1.252,138,0.869,139,1.092,140,1.252,142,1.544,149,0.397,150,0.539,151,0.922,152,0.747,156,0.539,157,0.539,158,1.092,163,0.747,164,0.747,165,0.463,168,0.869,172,0.869,185,0.463,191,0.539,192,1.373,193,1.092,194,0.539,196,1.373,204,0.463,205,0.539,214,0.938,235,0.646,236,0.397,237,1.011,238,2.098,239,1.011,240,0.869,241,1.457,242,1.457,243,2.178,244,1.457,245,2.119,246,2.119,247,1.598,248,1.598,249,1.598,250,1.598,251,2.119,252,1.011,253,1.314,254,1.011,255,1.608,256,1.314,257,1.314,258,1.314,259,1.011,260,1.314,261,0.869,262,1.271,263,1.011,264,1.314,265,1.011,266,1.314,267,2.026,268,1.011,269,1.314,270,1.011,271,1.314,272,1.011,273,1.314,274,1.011,275,1.314,276,1.709,277,1.011,278,1.468,279,1.314,280,1.271,281,1.314,282,1.314,283,0.463,284,0.463,285,0.869,286,1.011,287,1.271,288,1.797,289,0.869,290,1.457,291,1.271,292,0.627,293,0.627,294,0.627,295,0.627,296,0.627,297,0.869,298,0.627,299,0.627,300,0.627,301,0.627,302,1.011,303,1.271,304,1.011,305,0.627,306,0.539,307,0.627,308,0.539,309,0.627,310,0.539,311,0.627,312,1.011,313,0.627,314,1.011,315,1.011,316,0.627,317,0.627,318,0.627,319,0.627,320,0.627,321,0.627,322,1.797,323,1.709,324,1.271,325,1.598,326,0.627,327,0.627,328,0.627,329,1.011,330,1.011,331,0.627,332,0.627,333,1.011,334,1.011,335,0.627,336,0.627,337,0.627,338,0.627,339,0.627,340,1.011,341,0.627,342,1.011,343,1.271,344,1.011,345,1.011,346,1.011,347,0.627,348,0.627,349,0.627,350,0.627,351,0.627,352,0.627,353,1.011,354,0.627,355,0.627,356,1.271,357,0.627,358,0.627,359,0.627,360,0.627,361,0.627,362,0.627,363,0.627,364,1.011,365,1.011,366,0.627,367,0.627,368,0.627]],["title/pipes/SafeHtmlPipe.html",[219,1.251,369,1.463]],["body/pipes/SafeHtmlPipe.html",[2,0.958,3,0.958,7,0.671,8,0.513,18,2.454,24,2.078,28,0.671,30,1.124,44,1.526,45,0.06,46,1.938,47,0.958,48,0.961,50,1.139,51,0.808,53,0.808,54,0.546,69,0.05,70,0.05,74,2.958,134,1.124,165,1.312,219,2.114,369,2.638,370,2.958,371,4.43,372,3.724,373,4.43,374,4.729,375,3.724,376,4.729,377,2.958,378,2.454,379,4.43,380,3.724]],["title/injectables/ToastData.html",[29,0.674,235,0.473]],["body/injectables/ToastData.html",[2,0.78,3,0.413,7,0.289,8,0.519,9,0.658,11,0.565,12,1.719,13,1.243,14,0.658,15,1.722,16,0.565,23,0.289,28,0.905,29,0.878,30,1.33,32,1.03,33,1.399,42,1.269,45,0.061,47,1.133,48,0.846,49,1.374,50,0.878,51,0.348,53,0.882,54,0.541,69,0.028,70,0.028,72,1.866,73,0.658,77,1.243,78,1.599,80,0.565,81,1.017,83,0.874,84,1.202,85,0.658,89,0.547,91,0.538,93,1.48,94,1.699,100,1.186,101,1.017,102,1.599,105,0.658,106,1.519,108,1.667,109,0.658,117,0.658,121,0.658,122,1.068,126,0.874,129,0.658,131,0.658,133,1.519,134,0.484,136,0.658,137,1.399,138,1.017,139,1.243,140,1.399,142,1.667,149,0.484,150,0.658,151,0.749,152,0.874,156,0.658,157,0.658,158,1.243,163,0.874,164,0.565,165,0.565,168,0.658,172,1.017,185,0.565,191,0.658,192,1.722,193,1.243,194,0.658,196,1.512,204,0.565,205,0.658,214,0.874,235,0.703,236,0.484,237,0.765,238,1.941,239,0.765,240,0.658,241,1.183,242,0.765,243,2.267,244,0.765,247,1.183,248,1.183,249,1.183,250,1.183,252,0.765,254,0.765,255,0.874,259,0.765,261,0.658,262,1.183,263,0.765,265,0.765,267,1.861,268,0.765,270,0.765,272,0.765,274,0.765,276,1.628,277,0.765,278,1.243,280,1.183,283,0.565,284,0.565,285,1.017,286,1.183,287,1.861,288,2.102,289,1.399,290,1.941,291,1.861,292,1.183,293,1.628,294,0.765,295,0.765,296,0.765,297,1.017,298,0.765,299,0.765,300,0.765,301,0.765,302,1.183,303,1.447,304,1.183,305,0.765,306,0.658,307,0.765,308,0.658,309,0.765,310,0.658,311,0.765,312,1.183,313,0.765,314,1.183,315,1.183,316,0.765,317,0.765,318,0.765,319,0.765,320,0.765,321,0.765,322,1.941,323,1.861,324,1.447,325,1.76,326,0.765,327,0.765,328,0.765,329,1.183,330,1.183,331,0.765,332,0.765,333,1.183,334,1.183,335,0.765,336,0.765,337,0.765,338,0.765,339,0.765,340,1.183,341,0.765,342,1.183,343,1.447,344,1.183,345,1.183,346,1.183,347,0.765,348,0.765,349,0.765,350,0.765,351,0.765,352,0.765,353,1.183,354,0.765,355,0.765,356,1.447,357,0.765,358,0.765,359,0.765,360,0.765,361,0.765,362,0.765,363,0.765,364,1.183,365,1.183,366,0.765,367,0.765,368,0.765,381,1.604,382,1.604,383,1.604,384,1.604,385,1.604,386,1.604,387,1.604,388,1.604,389,1.604,390,1.604]],["title/injectables/ToastOptions.html",[235,0.473,255,0.924]],["body/injectables/ToastOptions.html",[2,0.787,3,0.419,7,0.294,8,0.489,9,0.62,11,0.574,12,1.723,13,1.255,14,0.667,15,1.731,16,0.574,23,0.294,28,0.886,29,0.787,30,1.235,32,1.038,33,1.41,42,1.275,45,0.061,47,1.275,48,0.851,49,1.383,50,0.885,51,0.353,53,0.887,54,0.545,69,0.028,70,0.028,72,1.873,73,0.667,77,1.255,78,1.609,80,0.574,81,1.028,83,0.884,84,1.212,85,0.667,89,0.552,91,0.544,93,1.488,94,1.679,100,1.158,101,1.255,102,1.609,105,0.667,106,1.441,108,1.41,109,0.667,117,0.667,121,0.667,122,1.078,126,0.884,129,0.667,131,0.667,133,1.526,134,0.492,136,0.667,137,1.41,138,1.028,139,1.255,140,1.41,142,1.676,149,0.492,150,0.667,151,0.758,152,0.884,156,0.667,157,0.667,158,1.255,163,0.884,164,0.574,165,0.574,168,0.667,172,1.028,185,0.574,191,0.667,192,1.731,193,1.255,194,0.667,196,1.523,204,0.574,205,0.667,214,0.884,235,0.708,236,0.492,237,0.777,238,1.951,239,0.777,240,0.667,241,1.197,242,0.777,243,2.273,244,0.777,247,1.197,248,1.197,249,1.197,250,1.197,252,0.777,254,0.777,255,1.078,259,0.777,261,0.667,262,1.197,263,0.777,265,0.777,267,1.872,268,0.777,270,0.777,272,0.777,274,0.777,276,1.641,277,0.777,278,1.255,280,1.197,283,0.574,284,0.574,285,1.028,286,1.46,287,1.872,288,2.111,289,1.41,290,1.951,291,1.872,292,0.777,293,0.777,294,0.777,295,0.777,296,0.777,297,1.028,298,0.777,299,0.777,300,0.777,301,0.777,302,1.197,303,1.46,304,1.197,305,0.777,306,0.667,307,0.777,308,0.667,309,0.777,310,0.667,311,0.777,312,1.197,313,0.777,314,1.197,315,1.197,316,0.777,317,0.777,318,0.777,319,0.777,320,0.777,321,0.777,322,1.951,323,1.872,324,1.46,325,1.772,326,0.777,327,0.777,328,0.777,329,1.197,330,1.197,331,0.777,332,0.777,333,1.197,334,1.197,335,0.777,336,0.777,337,0.777,338,0.777,339,0.777,340,1.197,341,0.777,342,1.197,343,1.46,344,1.197,345,1.197,346,1.197,347,0.777,348,0.777,349,0.777,350,0.777,351,0.777,352,0.777,353,1.197,354,0.777,355,0.777,356,1.46,357,0.777,358,0.777,359,0.777,360,0.777,361,0.777,362,0.777,363,0.777,364,1.197,365,1.197,366,0.777,367,0.777,368,0.777,391,1.628,392,1.628,393,1.628,394,1.628,395,1.628,396,1.628,397,1.628]],["title/injectables/ToastyConfig.html",[89,0.473,235,0.473]],["body/injectables/ToastyConfig.html",[2,0.775,3,0.409,7,0.287,8,0.45,9,0.57,11,0.56,12,1.707,13,1.236,14,0.651,15,1.506,16,0.56,23,0.287,28,0.868,29,0.775,30,1.109,32,1.025,33,1.392,42,1.265,45,0.061,47,1.13,48,0.843,49,1.369,50,0.873,51,0.345,53,0.879,54,0.539,69,0.028,70,0.028,72,1.887,73,1.009,77,1.236,78,1.593,80,0.56,81,1.506,83,0.868,84,1.196,85,0.651,89,0.612,91,0.534,93,1.476,94,1.548,100,1.043,101,1.009,102,1.593,105,0.651,106,1.515,108,1.392,109,0.651,117,0.651,121,0.651,122,1.476,126,0.868,129,0.651,131,0.651,133,1.696,134,1.174,136,0.651,137,1.834,138,1.593,139,1.763,140,1.862,142,1.662,149,0.48,150,0.651,151,0.744,152,0.868,156,0.651,157,0.651,158,1.236,163,1.062,164,0.56,165,0.56,168,0.651,172,1.009,185,1.196,191,0.651,192,1.717,193,1.236,194,0.651,196,1.506,204,0.56,205,0.651,214,1.196,235,0.701,236,0.48,237,0.758,238,1.934,239,0.758,240,0.651,241,1.175,242,0.758,243,2.263,244,0.758,247,1.175,248,1.175,249,1.175,250,1.175,252,0.758,254,0.758,255,0.868,259,0.758,261,0.651,262,1.439,263,0.758,265,0.758,267,1.854,268,0.758,270,0.758,272,0.758,274,0.758,276,1.62,277,0.758,278,1.236,280,1.62,283,0.56,284,0.56,285,1.009,286,1.439,287,1.439,288,2.097,289,1.009,290,1.62,291,1.439,292,0.758,293,0.758,294,1.175,295,0.758,296,1.175,297,1.009,298,0.758,299,0.758,300,0.758,301,0.758,302,1.175,303,1.439,304,1.175,305,1.175,306,0.651,307,0.758,308,0.651,309,0.758,310,0.651,311,0.758,312,1.175,313,0.758,314,1.175,315,1.175,316,0.758,317,0.758,318,0.758,319,0.758,320,0.758,321,0.758,322,1.934,323,1.854,324,1.439,325,1.753,326,0.758,327,0.758,328,0.758,329,1.175,330,1.175,331,0.758,332,0.758,333,1.175,334,1.175,335,0.758,336,0.758,337,0.758,338,0.758,339,0.758,340,1.175,341,0.758,342,1.175,343,1.439,344,1.175,345,1.175,346,1.175,347,0.758,348,0.758,349,0.758,350,0.758,351,0.758,352,0.758,353,1.175,354,0.758,355,0.758,356,1.439,357,0.758,358,0.758,359,0.758,360,0.758,361,0.758,362,0.758,363,0.758,364,1.175,365,1.175,366,0.758,367,0.758,368,0.758,398,1.589,399,1.589,400,1.589,401,1.589,402,1.589]],["title/classes/ToastyEvent.html",[54,0.385,151,0.792]],["body/classes/ToastyEvent.html",[2,0.807,3,0.436,7,0.306,8,0.407,9,0.516,12,1.724,13,1.287,14,0.695,15,1.551,16,0.597,23,0.306,28,0.891,29,0.807,30,0.948,32,1.061,33,1.44,42,1.292,44,0.695,45,0.061,46,0.695,47,1.201,48,0.865,49,1.405,50,0.904,51,0.368,53,0.9,54,0.585,69,0.029,70,0.029,72,1.89,73,0.695,77,1.287,78,1.635,80,0.597,81,1.061,83,0.912,84,1.238,85,0.695,87,1.117,89,0.566,91,0.561,93,1.507,94,1.576,100,1.067,101,1.061,102,1.635,105,0.695,106,1.333,108,1.44,109,0.695,117,0.695,121,0.695,122,1.106,126,0.912,129,0.695,131,0.695,133,1.544,134,1.204,136,0.695,137,1.44,138,1.061,139,1.287,140,1.44,142,1.701,149,0.512,150,0.695,151,0.948,152,1.405,156,0.695,157,0.695,158,1.287,163,0.912,164,0.597,165,0.597,168,0.695,172,1.061,185,0.597,191,0.695,192,1.551,193,1.287,194,0.695,196,1.551,204,0.597,205,0.695,214,0.912,235,0.682,236,0.512,237,0.809,238,1.979,239,0.809,240,0.695,241,1.903,242,0.809,243,2.227,244,0.809,247,1.235,248,1.235,249,1.235,250,1.235,252,0.809,254,0.809,255,0.912,259,0.809,261,0.695,262,1.235,263,0.809,265,0.809,267,1.903,268,0.809,270,0.809,272,0.809,274,0.809,276,1.676,277,0.809,278,1.287,280,1.235,283,0.597,284,0.597,285,1.061,286,1.235,287,1.498,288,1.979,289,1.061,290,1.676,291,1.498,292,0.809,293,0.809,294,0.809,295,0.809,296,0.809,297,1.061,298,0.809,299,0.809,300,0.809,301,0.809,302,1.235,303,1.498,304,1.235,305,0.809,306,0.695,307,0.809,308,0.695,309,0.809,310,0.695,311,0.809,312,1.235,313,0.809,314,1.235,315,1.235,316,0.809,317,0.809,318,0.809,319,0.809,320,0.809,321,0.809,322,1.979,323,1.903,324,1.498,325,1.805,326,0.809,327,0.809,328,0.809,329,1.235,330,1.235,331,0.809,332,0.809,333,1.235,334,1.235,335,0.809,336,0.809,337,0.809,338,0.809,339,0.809,340,1.235,341,0.809,342,1.235,343,1.498,344,1.235,345,1.235,346,1.235,347,0.809,348,0.809,349,0.809,350,0.809,351,0.809,352,0.809,353,1.235,354,0.809,355,0.809,356,1.498,357,0.809,358,0.809,359,0.809,360,0.809,361,0.809,362,0.809,363,0.809,364,1.235,365,1.235,366,0.809,367,0.809,368,0.809,403,1.695,404,1.695,405,1.695,406,2.588]],["title/coverage.html",[407,2.816]],["body/coverage.html",[0,1.722,1,1.399,7,0.615,8,0.605,9,0.752,10,2.711,28,0.615,29,0.878,42,1.03,45,0.06,54,0.501,66,1.399,69,0.048,70,0.048,71,2.711,89,0.615,91,0.74,100,1.222,110,2.711,149,1.03,151,1.03,164,1.674,207,1.399,219,1.628,223,2.249,231,1.904,235,0.857,236,1.5,255,1.202,283,1.202,284,1.202,369,1.904,370,2.711,407,2.711,408,2.711,409,3.413,410,3.413,411,3.413,412,3.413,413,3.413,414,2.249,415,4.553,416,3.413,417,3.413,418,3.413,419,3.413,420,3.413,421,3.413,422,3.413,423,3.413,424,3.413,425,3.617,426,4.553,427,4.553,428,3.413,429,3.413]],["title/dependencies.html",[212,1.754,430,2.207]],["body/dependencies.html",[45,0.06,51,0.833,69,0.051,70,0.051,212,2.143,228,3.051,285,1.574,377,3.584,378,2.973,431,3.841,432,5.221,433,3.841,434,3.841,435,3.841,436,3.841,437,3.841,438,3.841,439,3.841,440,3.841,441,3.841,442,3.841,443,3.841]],["title/miscellaneous/enumerations.html",[444,0.905,445,2.498]],["body/miscellaneous/enumerations.html",[8,0.469,9,0.594,23,0.73,45,0.053,69,0.053,70,0.053,83,1.427,84,1.427,152,1.639,236,1.405,308,1.66,444,1.66,445,3.217,446,2.669]],["title/miscellaneous/functions.html",[100,0.809,444,0.905]],["body/miscellaneous/functions.html",[8,0.5,9,0.524,11,1.636,23,0.644,28,0.931,44,1.978,45,0.057,46,1.978,47,1.241,48,1.007,69,0.049,70,0.049,93,1.258,94,1.522,100,1.195,106,1.258,126,1.636,149,1.304,163,1.636,231,2.41,236,1.304,283,1.522,284,1.522,289,1.464,310,1.464,425,2.837,444,1.464,446,2.353,447,4.645,448,3.571,449,5.022,450,4.645,451,4.645,452,3.571,453,3.571,454,3.571]],["title/index.html",[23,0.398,455,2.207,456,2.207]],["body/index.html",[7,0.614,32,1.029,45,0.048,67,2.245,69,0.048,70,0.048,122,1.2,185,1.479,207,1.397,222,2.245,240,1.397,261,1.397,278,1.397,297,1.397,306,1.721,408,3.335,457,4.198,458,4.198,459,3.407,460,3.407,461,3.407,462,3.407,463,3.407,464,3.407,465,3.407,466,3.407,467,3.407,468,4.198,469,3.407,470,4.55,471,3.407,472,3.407,473,3.407,474,3.407,475,4.198,476,3.407,477,3.407,478,3.407,479,3.407,480,4.198,481,3.407,482,4.749,483,5.123,484,3.407,485,4.198,486,4.55,487,3.407,488,4.55,489,3.407,490,3.407,491,3.407,492,3.407,493,3.407,494,3.407,495,3.407,496,3.407,497,3.407,498,3.407,499,3.407,500,3.407,501,4.198,502,4.198,503,3.407,504,3.407,505,4.198,506,3.407,507,3.407,508,3.407,509,3.407,510,3.407,511,3.407,512,3.407,513,3.407,514,3.407,515,3.407,516,3.407,517,3.407,518,3.407,519,3.407,520,3.407,521,3.407,522,3.407,523,3.407,524,3.407]],["title/modules.html",[210,1.691]],["body/modules.html",[45,0.053,69,0.053,70,0.053,210,1.959,211,2.291,378,2.706,525,4.106,526,4.106,527,4.106]],["title/overview.html",[528,2.816]],["body/overview.html",[0,1.51,1,2.096,45,0.058,53,0.799,54,0.541,59,2.055,66,2.096,69,0.05,70,0.05,89,0.849,204,1.659,207,1.51,210,2.1,211,2.932,212,2.055,213,2.927,214,1.298,215,2.927,216,2.927,217,2.927,218,2.927,219,2.246,220,3.497,221,2.927,222,2.428,235,0.664,369,2.055,528,2.927,529,3.684,530,3.684]],["title/miscellaneous/variables.html",[414,2.072,444,0.905]],["body/miscellaneous/variables.html",[8,0.455,9,0.576,23,0.708,28,0.708,45,0.06,69,0.052,70,0.052,89,0.824,91,0.852,133,1.384,134,1.186,207,2.041,223,3.012,231,2.191,232,3.12,233,3.12,414,2.588,444,1.61,446,2.588]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":164,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{}}}],["0.8.26",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":204,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"overview.html":{}}}],["1/1",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":529,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["2015",{"_index":472,"title":{},"body":{"index.html":{}}}],["4",{"_index":530,"title":{},"body":{"overview.html":{}}}],["41",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":296,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["50",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":305,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["6.0.0",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["7/17",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["_a",{"_index":459,"title":{},"body":{"index.html":{}}}],["_checkconfigitem",{"_index":245,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["_checkconfigitem(config",{"_index":252,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["_posit",{"_index":79,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["_settimeout",{"_index":82,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["_settimeout(toast",{"_index":96,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["abov",{"_index":500,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":145,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["accordion",{"_index":465,"title":{},"body":{"index.html":{}}}],["action",{"_index":519,"title":{},"body":{"index.html":{}}}],["actual_compon",{"_index":68,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["add",{"_index":83,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/enumerations.html":{}}}],["add(opt",{"_index":254,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["add(toast",{"_index":103,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["allow",{"_index":312,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["analys",{"_index":451,"title":{},"body":{"miscellaneous/functions.html":{}}}],["and/or",{"_index":494,"title":{},"body":{"index.html":{}}}],["angular",{"_index":457,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":228,"title":{},"body":{"modules/NgxToastnModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":51,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":377,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["arg",{"_index":374,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["aris",{"_index":523,"title":{},"body":{"index.html":{}}}],["array",{"_index":136,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["associ",{"_index":484,"title":{},"body":{"index.html":{}}}],["assosi",{"_index":119,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["author",{"_index":513,"title":{},"body":{"index.html":{}}}],["befor",{"_index":129,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["boolean",{"_index":289,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":214,"title":{},"body":{"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"overview.html":{}}}],["bottom",{"_index":137,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["bound",{"_index":125,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["brows",{"_index":527,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":378,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"dependencies.html":{},"modules.html":{}}}],["button",{"_index":17,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["c",{"_index":471,"title":{},"body":{"index.html":{}}}],["call",{"_index":121,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["caller",{"_index":348,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["center",{"_index":140,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["charg",{"_index":479,"title":{},"body":{"index.html":{}}}],["check",{"_index":126,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/functions.html":{}}}],["children",{"_index":130,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["claim",{"_index":516,"title":{},"body":{"index.html":{}}}],["class",{"_index":54,"title":{"classes/ToastyEvent.html":{}},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":84,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/enumerations.html":{}}}],["clear(id",{"_index":105,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["clear_al",{"_index":308,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/enumerations.html":{}}}],["clearal",{"_index":85,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["clearemitt",{"_index":317,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["click",{"_index":40,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["close",{"_index":16,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["close($ev",{"_index":35,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["closetoast",{"_index":27,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["closetoast(toast",{"_index":112,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["closetoastev",{"_index":56,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["cluster_ngxtoastnmodul",{"_index":215,"title":{},"body":{"modules/NgxToastnModule.html":{},"overview.html":{}}}],["cluster_ngxtoastnmodule_declar",{"_index":216,"title":{},"body":{"modules/NgxToastnModule.html":{},"overview.html":{}}}],["cluster_ngxtoastnmodule_export",{"_index":217,"title":{},"body":{"modules/NgxToastnModule.html":{},"overview.html":{}}}],["cluster_ngxtoastnmodule_provid",{"_index":218,"title":{},"body":{"modules/NgxToastnModule.html":{},"overview.html":{}}}],["come",{"_index":115,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["commonmodul",{"_index":227,"title":{},"body":{"modules/NgxToastnModule.html":{}}}],["compon",{"_index":0,"title":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":64,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["condit",{"_index":499,"title":{},"body":{"index.html":{}}}],["config",{"_index":93,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/functions.html":{}}}],["config[properti",{"_index":366,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["configur",{"_index":286,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["connect",{"_index":524,"title":{},"body":{"index.html":{}}}],["const",{"_index":173,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["constant",{"_index":143,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"classes/ToastyEvent.html":{}}}],["constructor(config",{"_index":88,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{}}}],["constructor(priv",{"_index":165,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["constructor(publ",{"_index":309,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["constructor(typ",{"_index":403,"title":{},"body":{"classes/ToastyEvent.html":{}}}],["contain",{"_index":73,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["contract",{"_index":520,"title":{},"body":{"index.html":{}}}],["copi",{"_index":482,"title":{},"body":{"index.html":{}}}],["copyright",{"_index":470,"title":{},"body":{"index.html":{}}}],["core",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["counter",{"_index":314,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["coverag",{"_index":407,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":238,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["custom",{"_index":98,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["damag",{"_index":517,"title":{},"body":{"index.html":{}}}],["damian",{"_index":473,"title":{},"body":{"index.html":{}}}],["data",{"_index":124,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["deal",{"_index":485,"title":{},"body":{"index.html":{}}}],["declar",{"_index":213,"title":{},"body":{"modules/NgxToastnModule.html":{},"overview.html":{}}}],["default",{"_index":133,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/variables.html":{}}}],["default(opt",{"_index":259,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["defin",{"_index":30,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["denni",{"_index":474,"title":{},"body":{"index.html":{}}}],["dep",{"_index":233,"title":{},"body":{"modules/NgxToastnModule.html":{},"miscellaneous/variables.html":{}}}],["depend",{"_index":212,"title":{"dependencies.html":{}},"body":{"modules/NgxToastnModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":11,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"miscellaneous/functions.html":{}}}],["differ",{"_index":239,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["direct",{"_index":62,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["directive'",{"_index":123,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["distribut",{"_index":492,"title":{},"body":{"index.html":{}}}],["document",{"_index":408,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["domsanit",{"_index":376,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["dynam",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["earliest",{"_index":186,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["element",{"_index":61,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["emit",{"_index":41,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["emitev",{"_index":246,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["emitevent(ev",{"_index":263,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["emitt",{"_index":315,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["enum",{"_index":307,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["enumer",{"_index":445,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":247,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["error('ng2",{"_index":331,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["error('pleas",{"_index":206,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["error(opt",{"_index":265,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["event",{"_index":32,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"index.html":{}}}],["event.preventdefault",{"_index":57,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["event.typ",{"_index":170,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["event.valu",{"_index":174,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["eventemitt",{"_index":33,"title":{},"body":{"components/NgxToastComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["eventsourc",{"_index":242,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["everyday",{"_index":461,"title":{},"body":{"index.html":{}}}],["export",{"_index":53,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"overview.html":{}}}],["express",{"_index":506,"title":{},"body":{"index.html":{}}}],["fals",{"_index":365,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"index.html":{}}}],["first",{"_index":127,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["fit",{"_index":509,"title":{},"body":{"index.html":{}}}],["foa",{"_index":294,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["follow",{"_index":498,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":234,"title":{},"body":{"modules/NgxToastnModule.html":{}}}],["free",{"_index":478,"title":{},"body":{"index.html":{}}}],["function",{"_index":100,"title":{"miscellaneous/functions.html":{}},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":497,"title":{},"body":{"index.html":{}}}],["get",{"_index":455,"title":{"index.html":{}},"body":{}}],["getclear",{"_index":320,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["getposit",{"_index":146,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["gettoast",{"_index":318,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["global",{"_index":193,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["gone",{"_index":183,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["grant",{"_index":477,"title":{},"body":{"index.html":{}}}],["group",{"_index":460,"title":{},"body":{"index.html":{}}}],["handler",{"_index":37,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["help",{"_index":237,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["here",{"_index":358,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["herebi",{"_index":476,"title":{},"body":{"index.html":{}}}],["holder",{"_index":514,"title":{},"body":{"index.html":{}}}],["html",{"_index":60,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["icon",{"_index":299,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["id",{"_index":108,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["identifi",{"_index":110,"title":{},"body":{"components/NgxToastnComponent.html":{},"coverage.html":{}}}],["implement",{"_index":74,"title":{},"body":{"components/NgxToastnComponent.html":{},"pipes/SafeHtmlPipe.html":{}}}],["impli",{"_index":507,"title":{},"body":{"index.html":{}}}],["import",{"_index":50,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["includ",{"_index":488,"title":{},"body":{"index.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":102,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["info(opt",{"_index":268,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["init",{"_index":313,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["initialis",{"_index":166,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["inject",{"_index":235,"title":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{}},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":25,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["instanti",{"_index":132,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["invok",{"_index":38,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["isfunct",{"_index":149,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfunction(obj",{"_index":448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isfunction(toastyoptions.onadd",{"_index":344,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["isfunction(toastyoptions.onremov",{"_index":347,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["isfunction(value.onremov",{"_index":201,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["isnumb",{"_index":284,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnumber(obj",{"_index":452,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnumber(opt",{"_index":327,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["isstr",{"_index":283,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isstring(obj",{"_index":453,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isstring(opt",{"_index":326,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["it'",{"_index":302,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["item",{"_index":324,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["js",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":198,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["kind",{"_index":240,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"index.html":{}}}],["left",{"_index":138,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["legend",{"_index":59,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"overview.html":{}}}],["let",{"_index":179,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["liabil",{"_index":518,"title":{},"body":{"index.html":{}}}],["liabl",{"_index":515,"title":{},"body":{"index.html":{}}}],["librari",{"_index":458,"title":{},"body":{"index.html":{}}}],["licens",{"_index":469,"title":{},"body":{"index.html":{}}}],["limit",{"_index":185,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"index.html":{}}}],["line",{"_index":155,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["list",{"_index":261,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"index.html":{}}}],["listen",{"_index":114,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["local",{"_index":334,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["long",{"_index":300,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["make",{"_index":337,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["match",{"_index":70,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":280,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["maximum",{"_index":295,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["merchant",{"_index":508,"title":{},"body":{"index.html":{}}}],["merg",{"_index":490,"title":{},"body":{"index.html":{}}}],["messag",{"_index":14,"title":{},"body":{"components/NgxToastComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["metadata",{"_index":18,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"pipes/SafeHtmlPipe.html":{}}}],["method",{"_index":24,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{}}}],["milisecond",{"_index":301,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["miscellan",{"_index":444,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":468,"title":{},"body":{"index.html":{}}}],["modifi",{"_index":489,"title":{},"body":{"index.html":{}}}],["modul",{"_index":210,"title":{"modules/NgxToastnModule.html":{},"modules.html":{}},"body":{"modules/NgxToastnModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":224,"title":{},"body":{"modules/NgxToastnModule.html":{}}}],["msg",{"_index":287,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["name",{"_index":46,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"classes/ToastyEvent.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":42,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{}}}],["next",{"_index":154,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["ngmodul",{"_index":225,"title":{},"body":{"modules/NgxToastnModule.html":{}}}],["ngoninit",{"_index":86,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["ngx",{"_index":20,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{}}}],["ngxtoastcompon",{"_index":1,"title":{"components/NgxToastComponent.html":{}},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"coverage.html":{},"overview.html":{}}}],["ngxtoastncompon",{"_index":66,"title":{"components/NgxToastnComponent.html":{}},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"coverage.html":{},"overview.html":{}}}],["ngxtoastnmodul",{"_index":211,"title":{"modules/NgxToastnModule.html":{}},"body":{"modules/NgxToastnModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxtoastnservic",{"_index":91,"title":{"injectables/NgxToastnService.html":{}},"body":{"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxtoastnservice(config",{"_index":311,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["ngxtoastnservice.themes.indexof(toastyoptions.them",{"_index":341,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["noninfring",{"_index":512,"title":{},"body":{"index.html":{}}}],["notfound",{"_index":162,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["notic",{"_index":501,"title":{},"body":{"index.html":{}}}],["null",{"_index":345,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["null/0",{"_index":303,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["number",{"_index":106,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/functions.html":{}}}],["obj",{"_index":450,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":449,"title":{},"body":{"miscellaneous/functions.html":{}}}],["observ",{"_index":276,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["obtain",{"_index":481,"title":{},"body":{"index.html":{}}}],["on",{"_index":172,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["onadd",{"_index":290,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["onc",{"_index":131,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["onclick",{"_index":293,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["oninit",{"_index":75,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["onremov",{"_index":291,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["option",{"_index":47,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/functions.html":{}}}],["options.tostr",{"_index":328,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["options[properti",{"_index":364,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["otherwis",{"_index":522,"title":{},"body":{"index.html":{}}}],["out",{"_index":222,"title":{},"body":{"modules/NgxToastnModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":26,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["output('closetoast",{"_index":55,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["over",{"_index":184,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["overrid",{"_index":267,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["overview",{"_index":528,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":430,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":144,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["param",{"_index":196,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["paramet",{"_index":44,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"classes/ToastyEvent.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":510,"title":{},"body":{"index.html":{}}}],["pass",{"_index":349,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["permiss",{"_index":475,"title":{},"body":{"index.html":{}}}],["permit",{"_index":496,"title":{},"body":{"index.html":{}}}],["person",{"_index":480,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":369,"title":{"pipes/SafeHtmlPipe.html":{}},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipetransform",{"_index":379,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["pop",{"_index":157,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["portion",{"_index":504,"title":{},"body":{"index.html":{}}}],["posit",{"_index":81,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["position(valu",{"_index":161,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["possibl",{"_index":159,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["privat",{"_index":78,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["projects/.../ngx",{"_index":446,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../toasty.utils.t",{"_index":447,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngx",{"_index":8,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["properti",{"_index":77,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["provid",{"_index":207,"title":{},"body":{"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":241,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["publish",{"_index":491,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":511,"title":{},"body":{"index.html":{}}}],["push",{"_index":353,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["remov",{"_index":117,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["reset",{"_index":221,"title":{},"body":{"modules/NgxToastnModule.html":{},"overview.html":{}}}],["rest",{"_index":467,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":487,"title":{},"body":{"index.html":{}}}],["result",{"_index":69,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":48,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":122,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"index.html":{}}}],["rxj",{"_index":285,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"dependencies.html":{}}}],["safehtml",{"_index":371,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["safehtmlpip",{"_index":219,"title":{"pipes/SafeHtmlPipe.html":{}},"body":{"modules/NgxToastnModule.html":{},"pipes/SafeHtmlPipe.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":19,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["sell",{"_index":495,"title":{},"body":{"index.html":{}}}],["servic",{"_index":168,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["set",{"_index":142,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["setposition(valu",{"_index":148,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["settimeout",{"_index":99,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["shall",{"_index":502,"title":{},"body":{"index.html":{}}}],["share",{"_index":230,"title":{},"body":{"modules/NgxToastnModule.html":{}}}],["show",{"_index":13,"title":{},"body":{"components/NgxToastComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["showclos",{"_index":288,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["simpl",{"_index":464,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":483,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["specif",{"_index":101,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["specifi",{"_index":332,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["start",{"_index":456,"title":{"index.html":{}},"body":{}}],["statement",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":80,"title":{},"body":{"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["string",{"_index":94,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/functions.html":{}}}],["structur",{"_index":292,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["subject",{"_index":278,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"index.html":{}}}],["sublicens",{"_index":493,"title":{},"body":{"index.html":{}}}],["substanti",{"_index":503,"title":{},"body":{"index.html":{}}}],["success",{"_index":248,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["success(opt",{"_index":270,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["support",{"_index":525,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":338,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["svg",{"_index":526,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["theme",{"_index":243,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["there'",{"_index":191,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this._checkconfigitem(this.config",{"_index":336,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this._settimeout(toast",{"_index":195,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["this.add(opt",{"_index":323,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this.add(toast",{"_index":175,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["this.clear(id",{"_index":177,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["this.clear(toast.id",{"_index":181,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["this.clearal",{"_index":180,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["this.clearemitter.asobserv",{"_index":321,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this.clearemitter.next(id",{"_index":362,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this.clearemitter.next(nul",{"_index":360,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this.closetoastevent.next(this.toast",{"_index":58,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["this.config.limit",{"_index":188,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["this.config.them",{"_index":342,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this.config.timeout",{"_index":352,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this.domsanitized.bypasssecuritytrusthtml(valu",{"_index":380,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["this.emitevent(new",{"_index":356,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this.eventsourc",{"_index":367,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this.eventsource.asobserv",{"_index":277,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this.eventsource.next(ev",{"_index":368,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this.posit",{"_index":167,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["this.toast",{"_index":208,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["this.toasts.foreach((valu",{"_index":197,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["this.toasts.length",{"_index":187,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["this.toasts.push(toast",{"_index":190,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["this.toasts.shift",{"_index":189,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["this.toasts.splice(key",{"_index":203,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["this.toastsemitter.asobserv",{"_index":319,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this.toastsemitter.next(toast",{"_index":355,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this.toastssubscriber.next(toast",{"_index":354,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["this.toastyservice.events.subscribe((ev",{"_index":169,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["this.uniquecount",{"_index":333,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["throw",{"_index":205,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["time",{"_index":128,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["timeout",{"_index":192,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["titl",{"_index":15,"title":{},"body":{"components/NgxToastComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toast",{"_index":12,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toast'},{'nam",{"_index":65,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["toast.compon",{"_index":229,"title":{},"body":{"modules/NgxToastnModule.html":{}}}],["toast.component.html",{"_index":22,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["toast.component.t",{"_index":10,"title":{},"body":{"components/NgxToastComponent.html":{},"coverage.html":{}}}],["toast.component.ts:18",{"_index":31,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["toast.component.ts:19",{"_index":34,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["toast.component.ts:25",{"_index":36,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["toast.timeout",{"_index":194,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastcompon",{"_index":118,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastconfig",{"_index":160,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastdata",{"_index":29,"title":{"injectables/ToastData.html":{}},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{}}}],["toasti",{"_index":72,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastn",{"_index":67,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"index.html":{}}}],["toastn.compon",{"_index":226,"title":{},"body":{"modules/NgxToastnModule.html":{}}}],["toastn.component.html",{"_index":76,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastn.component.t",{"_index":71,"title":{},"body":{"components/NgxToastnComponent.html":{},"coverage.html":{}}}],["toastn.component.ts:106",{"_index":104,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastn.component.ts:126",{"_index":107,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastn.component.ts:144",{"_index":111,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastn.component.ts:156",{"_index":97,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastn.component.ts:22",{"_index":141,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastn.component.ts:32",{"_index":135,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastn.component.ts:41",{"_index":95,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastn.component.ts:60",{"_index":147,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastn.component.ts:65",{"_index":92,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastn.component.ts:77",{"_index":120,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastn.component.ts:99",{"_index":113,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastn.module.t",{"_index":223,"title":{},"body":{"modules/NgxToastnModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastn.servic",{"_index":52,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{}}}],["toastn.service.t",{"_index":236,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["toastn.service.ts:111",{"_index":260,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn.service.ts:119",{"_index":269,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn.service.ts:127",{"_index":271,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn.service.ts:135",{"_index":273,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn.service.ts:143",{"_index":266,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn.service.ts:151",{"_index":275,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn.service.ts:157",{"_index":256,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn.service.ts:16",{"_index":397,"title":{},"body":{"injectables/ToastOptions.html":{}}}],["toastn.service.ts:17",{"_index":391,"title":{},"body":{"injectables/ToastOptions.html":{}}}],["toastn.service.ts:18",{"_index":394,"title":{},"body":{"injectables/ToastOptions.html":{}}}],["toastn.service.ts:19",{"_index":395,"title":{},"body":{"injectables/ToastOptions.html":{}}}],["toastn.service.ts:20",{"_index":396,"title":{},"body":{"injectables/ToastOptions.html":{}}}],["toastn.service.ts:21",{"_index":392,"title":{},"body":{"injectables/ToastOptions.html":{}}}],["toastn.service.ts:214",{"_index":258,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn.service.ts:22",{"_index":393,"title":{},"body":{"injectables/ToastOptions.html":{}}}],["toastn.service.ts:220",{"_index":257,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn.service.ts:227",{"_index":253,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn.service.ts:237",{"_index":264,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn.service.ts:30",{"_index":381,"title":{},"body":{"injectables/ToastData.html":{}}}],["toastn.service.ts:31",{"_index":389,"title":{},"body":{"injectables/ToastData.html":{}}}],["toastn.service.ts:32",{"_index":382,"title":{},"body":{"injectables/ToastData.html":{}}}],["toastn.service.ts:33",{"_index":386,"title":{},"body":{"injectables/ToastData.html":{}}}],["toastn.service.ts:34",{"_index":390,"title":{},"body":{"injectables/ToastData.html":{}}}],["toastn.service.ts:35",{"_index":387,"title":{},"body":{"injectables/ToastData.html":{}}}],["toastn.service.ts:36",{"_index":388,"title":{},"body":{"injectables/ToastData.html":{}}}],["toastn.service.ts:37",{"_index":383,"title":{},"body":{"injectables/ToastData.html":{}}}],["toastn.service.ts:38",{"_index":385,"title":{},"body":{"injectables/ToastData.html":{}}}],["toastn.service.ts:39",{"_index":384,"title":{},"body":{"injectables/ToastData.html":{}}}],["toastn.service.ts:49",{"_index":398,"title":{},"body":{"injectables/ToastyConfig.html":{}}}],["toastn.service.ts:52",{"_index":400,"title":{},"body":{"injectables/ToastyConfig.html":{}}}],["toastn.service.ts:55",{"_index":399,"title":{},"body":{"injectables/ToastyConfig.html":{}}}],["toastn.service.ts:58",{"_index":402,"title":{},"body":{"injectables/ToastyConfig.html":{}}}],["toastn.service.ts:61",{"_index":401,"title":{},"body":{"injectables/ToastyConfig.html":{}}}],["toastn.service.ts:70",{"_index":404,"title":{},"body":{"classes/ToastyEvent.html":{}}}],["toastn.service.ts:71",{"_index":406,"title":{},"body":{"classes/ToastyEvent.html":{}}}],["toastn.service.ts:84",{"_index":281,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn.service.ts:86",{"_index":282,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn.service.ts:92",{"_index":279,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn.service.ts:93",{"_index":251,"title":{},"body":{"injectables/NgxToastnService.html":{}}}],["toastn/src/lib/ngx",{"_index":9,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["toastn/src/lib/shared.t",{"_index":370,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["toastn/src/lib/shared.ts:12",{"_index":375,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["toastn/src/lib/toasty.utils.t",{"_index":425,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toastopt",{"_index":255,"title":{"injectables/ToastOptions.html":{}},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{}}}],["toastoptions|string|numb",{"_index":322,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastsemitt",{"_index":316,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toasty.util",{"_index":150,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastycompon",{"_index":116,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastyconfig",{"_index":89,"title":{"injectables/ToastyConfig.html":{}},"body":{"components/NgxToastnComponent.html":{},"modules/NgxToastnModule.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["toastycontain",{"_index":43,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["toastyev",{"_index":151,"title":{"classes/ToastyEvent.html":{}},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{}}}],["toastyevent(toastyeventtype.add",{"_index":357,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastyevent(toastyeventtype.clear",{"_index":363,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastyevent(toastyeventtype.clear_al",{"_index":361,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastyeventtyp",{"_index":152,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/enumerations.html":{}}}],["toastyeventtype.add",{"_index":171,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastyeventtype.clear",{"_index":176,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastyeventtype.clear_al",{"_index":178,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastyopt",{"_index":325,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastyoptions.hasownproperty('timeout",{"_index":350,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastyoptions.msg",{"_index":330,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastyoptions.onadd",{"_index":343,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastyoptions.onadd.call(thi",{"_index":359,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastyoptions.onremov",{"_index":346,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastyoptions.them",{"_index":340,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastyoptions.timeout",{"_index":351,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastyoptions.titl",{"_index":329,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["toastyservic",{"_index":90,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["toastyservicefactori",{"_index":231,"title":{},"body":{"modules/NgxToastnModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["toastyservicefactory(config",{"_index":310,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/functions.html":{}}}],["toat",{"_index":262,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["top",{"_index":139,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["tort",{"_index":521,"title":{},"body":{"index.html":{}}}],["transform",{"_index":372,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["transform(valu",{"_index":373,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["true",{"_index":163,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/functions.html":{}}}],["tslint:dis",{"_index":153,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["turn",{"_index":304,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["type",{"_index":28,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":454,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniqu",{"_index":109,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["uniquecount",{"_index":244,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["up",{"_index":158,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["us",{"_index":306,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"index.html":{}}}],["usag",{"_index":462,"title":{},"body":{"index.html":{}}}],["usefactori",{"_index":232,"title":{},"body":{"modules/NgxToastnModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":39,"title":{},"body":{"components/NgxToastComponent.html":{}}}],["valid",{"_index":339,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["valu",{"_index":134,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"miscellaneous/variables.html":{}}}],["value.id",{"_index":199,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["value.onremov",{"_index":200,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["value.onremove.call(thi",{"_index":202,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["var",{"_index":63,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{}}}],["variabl",{"_index":414,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["view",{"_index":463,"title":{},"body":{"index.html":{}}}],["void",{"_index":49,"title":{},"body":{"components/NgxToastComponent.html":{},"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["vs",{"_index":335,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["wait",{"_index":249,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["wait(opt",{"_index":272,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["warn",{"_index":250,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["warning(opt",{"_index":274,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["warranti",{"_index":505,"title":{},"body":{"index.html":{}}}],["we'v",{"_index":182,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["whether",{"_index":297,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{},"index.html":{}}}],["window",{"_index":156,"title":{},"body":{"components/NgxToastnComponent.html":{},"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["window.settimeout",{"_index":209,"title":{},"body":{"components/NgxToastnComponent.html":{}}}],["without",{"_index":486,"title":{},"body":{"index.html":{}}}],["x",{"_index":298,"title":{},"body":{"injectables/NgxToastnService.html":{},"injectables/ToastData.html":{},"injectables/ToastOptions.html":{},"injectables/ToastyConfig.html":{},"classes/ToastyEvent.html":{}}}],["ye",{"_index":405,"title":{},"body":{"classes/ToastyEvent.html":{}}}],["yii2",{"_index":466,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":220,"title":{},"body":{"modules/NgxToastnModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/NgxToastComponent.html":{"url":"components/NgxToastComponent.html","title":"component - NgxToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-toastn/src/lib/ngx-toast.component.ts\n\n\n    \n        Description\n    \n    \n        A Toast component shows message with title and close button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-toast\n            \n\n\n\n\n            \n                templateUrl\n                ngx-toast.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeToast\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        toast\n                    \n                    \n                            \n                            Type:    ToastData\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toast.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeToast\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toast.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose($event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toast.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Event handler invokes when user clicks on close button.\nThis method emit new event into ToastyContainer to close it.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { ToastData } from './ngx-toastn.service';\n\n/**\n * A Toast component shows message with title and close button.\n */\n@Component({\n  selector: 'ngx-toast',\n  templateUrl: 'ngx-toast.component.html'\n})\nexport class NgxToastComponent {\n\n  @Input() toast: ToastData;\n  @Output('closeToast') closeToastEvent = new EventEmitter();\n\n  /**\n   * Event handler invokes when user clicks on close button.\n   * This method emit new event into ToastyContainer to close it.\n   */\n  close($event: any) {\n    $event.preventDefault();\n    this.closeToastEvent.next(this.toast);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'NgxToastComponent', 'selector': 'ngx-toast'},{'name': 'NgxToastnComponent', 'selector': 'ngx-toastn'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxToastnComponent.html":{"url":"components/NgxToastnComponent.html","title":"component - NgxToastnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxToastnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-toastn/src/lib/ngx-toastn.component.ts\n\n\n    \n        Description\n    \n    \n        Toasty is container for Toast components\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-toastn\n            \n\n\n\n\n            \n                templateUrl\n                ngx-toastn.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _position\n                            \n                            \n                                    Static\n                                POSITIONS\n                            \n                            \n                                toasts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _setTimeout\n                            \n                            \n                                add\n                            \n                            \n                                clear\n                            \n                            \n                                clearAll\n                            \n                            \n                                closeToast\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ToastyConfig, toastyService: NgxToastnService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-toastn/src/lib/ngx-toastn.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ToastyConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastyService\n                                                  \n                                                        \n                                                                    NgxToastnService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        position\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.component.ts:41\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _setTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _setTimeout(toast: ToastData)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.component.ts:156\n                            \n                        \n\n\n                \n                    \n                            Custom setTimeout function for specific setTimeouts on individual toasts.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toast\n                                                        \n                                                                    ToastData\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(toast: ToastData)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Add new Toast\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toast\n                                                        \n                                                                    ToastData\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Clear individual toast by id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                is unique identifier of Toast\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.component.ts:144\n                            \n                        \n\n\n                \n                    \n                            Clear all toasts\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeToast\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseToast(toast: ToastData)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Event listener of 'closeToast' event comes from ToastyComponent.\nThis method removes ToastComponent assosiated with this Toast.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toast\n                                                        \n                                                                    ToastData\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            ngOnInit is called right after the directive's data-bound properties have been checked for the\nfirst time, and before any of its children have been checked. It is invoked only once when the\ndirective is instantiated.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _position:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            POSITIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        POSITIONS:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'bottom-right',\n    'bottom-left',\n    'top-right',\n    'top-left',\n    'top-center',\n    'bottom-center',\n    'center-center'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.component.ts:22\n                            \n                        \n\n                \n                    \n                        Set of constants defines position of Toasty on the page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toasts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toasts:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.component.ts:65\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n\n                \n                    \n                        getposition()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.component.ts:60\n                                \n                            \n\n                \n                    \n                        setposition(value: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.component.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { isFunction } from './toasty.utils';\nimport { NgxToastnService, ToastData, ToastyConfig, ToastyEvent, ToastyEventType } from './ngx-toastn.service';\n\n/**\n * Toasty is container for Toast components\n */\n@Component({\n  // tslint:disable-next-line component-selector\n  selector: 'ngx-toastn',\n  templateUrl: 'ngx-toastn.component.html'\n})\nexport class NgxToastnComponent implements OnInit {\n  /**\n   * Set of constants defines position of Toasty on the page.\n   */\n  static POSITIONS: Array = [\n    'bottom-right',\n    'bottom-left',\n    'top-right',\n    'top-left',\n    'top-center',\n    'bottom-center',\n    'center-center'\n  ];\n\n  private _position = '';\n  // The window position where the toast pops up. Possible values:\n  // - bottom-right (default value from ToastConfig)\n  // - bottom-left\n  // - top-right\n  // - top-left\n  // - top-center\n  // - bottom-center\n  // - center-center\n  @Input() set position(value: string) {\n    if (value) {\n      let notFound = true;\n      for (let i = 0; i  = [];\n\n  constructor(private config: ToastyConfig, private toastyService: NgxToastnService) {\n    // Initialise position\n    this.position = '';\n  }\n\n  /**\n   * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n   * first time, and before any of its children have been checked. It is invoked only once when the\n   * directive is instantiated.\n   */\n  ngOnInit(): any {\n    // We listen events from our service\n    this.toastyService.events.subscribe((event: ToastyEvent) => {\n      if (event.type === ToastyEventType.ADD) {\n        // Add the new one\n        const toast: ToastData = event.value;\n        this.add(toast);\n      } else if (event.type === ToastyEventType.CLEAR) {\n        // Clear the one by number\n        const id: number = event.value;\n        this.clear(id);\n      } else if (event.type === ToastyEventType.CLEAR_ALL) {\n        // Lets clear all toasts\n        this.clearAll();\n      }\n    });\n  }\n\n  /**\n   * Event listener of 'closeToast' event comes from ToastyComponent.\n   * This method removes ToastComponent assosiated with this Toast.\n   */\n  closeToast(toast: ToastData) {\n    this.clear(toast.id);\n  }\n\n  /**\n   * Add new Toast\n   */\n  add(toast: ToastData) {\n    // If we've gone over our limit, remove the earliest\n    // one from the array\n    if (this.toasts.length >= this.config.limit) {\n      this.toasts.shift();\n    }\n    // Add toasty to array\n    this.toasts.push(toast);\n    //\n    // If there's a timeout individually or globally,\n    // set the toast to timeout\n    if (toast.timeout) {\n      this._setTimeout(toast);\n    }\n  }\n\n  /**\n   * Clear individual toast by id\n   * @param id is unique identifier of Toast\n   */\n  clear(id: number) {\n    if (id) {\n      this.toasts.forEach((value: any, key: number) => {\n        if (value.id === id) {\n          if (value.onRemove && isFunction(value.onRemove)) {\n            value.onRemove.call(this, value);\n          }\n          this.toasts.splice(key, 1);\n        }\n      });\n    } else {\n      throw new Error('Please provide id of Toast to close');\n    }\n  }\n\n  /**\n   * Clear all toasts\n   */\n  clearAll() {\n    this.toasts.forEach((value: any, key: number) => {\n      if (value.onRemove && isFunction(value.onRemove)) {\n        value.onRemove.call(this, value);\n      }\n    });\n    this.toasts = [];\n  }\n\n  /**\n   * Custom setTimeout function for specific setTimeouts on individual toasts.\n   */\n  private _setTimeout(toast: ToastData) {\n    window.setTimeout(() => {\n      this.clear(toast.id);\n    }, toast.timeout);\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'NgxToastComponent', 'selector': 'ngx-toast'},{'name': 'NgxToastnComponent', 'selector': 'ngx-toastn'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxToastnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxToastnModule.html":{"url":"modules/NgxToastnModule.html","title":"module - NgxToastnModule","body":"\n                   \n\n\n\n\n  Modules\n  NgxToastnModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxToastnModule\n\n\n\ncluster_NgxToastnModule_declarations\n\n\n\ncluster_NgxToastnModule_exports\n\n\n\ncluster_NgxToastnModule_providers\n\n\n\n\nNgxToastComponent\n\nNgxToastComponent\n\n\n\nNgxToastnModule\n\nNgxToastnModule\n\nNgxToastnModule -->\n\nNgxToastComponent->NgxToastnModule\n\n\n\n\n\nNgxToastnComponent\n\nNgxToastnComponent\n\nNgxToastnModule -->\n\nNgxToastnComponent->NgxToastnModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nNgxToastnModule -->\n\nSafeHtmlPipe->NgxToastnModule\n\n\n\n\n\nNgxToastComponent \n\nNgxToastComponent \n\nNgxToastComponent  -->\n\nNgxToastnModule->NgxToastComponent \n\n\n\n\n\nNgxToastnComponent \n\nNgxToastnComponent \n\nNgxToastnComponent  -->\n\nNgxToastnModule->NgxToastnComponent \n\n\n\n\n\nToastyConfig\n\nToastyConfig\n\nNgxToastnModule -->\n\nToastyConfig->NgxToastnModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-toastn/src/lib/ngx-toastn.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NgxToastComponent\n                            \n                            \n                                NgxToastnComponent\n                            \n                            \n                                SafeHtmlPipe\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ToastyConfig\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NgxToastComponent\n                            \n                            \n                                    NgxToastnComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {ModuleWithProviders, NgModule} from '@angular/core';\nimport { NgxToastnComponent } from './ngx-toastn.component';\nimport {CommonModule} from '@angular/common';\nimport {NgxToastComponent} from './ngx-toast.component';\nimport {SafeHtmlPipe} from './shared';\nimport {ToastyConfig, NgxToastnService, toastyServiceFactory} from './ngx-toastn.service';\n\nexport let providers = [\n  ToastyConfig,\n  { provide: NgxToastnService, useFactory: toastyServiceFactory, deps: [ToastyConfig] }\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxToastnComponent, NgxToastComponent, SafeHtmlPipe],\n  exports: [NgxToastnComponent, NgxToastComponent],\n  providers: providers\n})\nexport class NgxToastnModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxToastnModule,\n      providers: providers\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxToastnService.html":{"url":"injectables/NgxToastnService.html","title":"injectable - NgxToastnService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgxToastnService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-toastn/src/lib/ngx-toastn.service.ts\n        \n\n            \n                Description\n            \n            \n                Toasty service helps create different kinds of Toasts\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                events\n                            \n                            \n                                    Private\n                                eventSource\n                            \n                            \n                                    Static\n                                THEMES\n                            \n                            \n                                uniqueCounter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _checkConfigItem\n                            \n                            \n                                    Private\n                                add\n                            \n                            \n                                clear\n                            \n                            \n                                clearAll\n                            \n                            \n                                default\n                            \n                            \n                                    Private\n                                emitEvent\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                success\n                            \n                            \n                                wait\n                            \n                            \n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ToastyConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ToastyConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _checkConfigItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _checkConfigItem(config: any, options: any, property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:227\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        add(options: ToastOptions | string | number, type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:157\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ToastOptions | string | number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:220\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:214\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            default\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefault(options: ToastOptions | string | number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:111\n                            \n                        \n\n\n                \n                    \n                            Get list of toats\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ToastOptions | string | number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        emitEvent(event: ToastyEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:237\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    ToastyEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \nerror(options: ToastOptions | string | number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:143\n                            \n                        \n\n\n                \n                    \n                            Create Toast of error type\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ToastOptions | string | number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Individual toasty config overrides\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \ninfo(options: ToastOptions | string | number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:119\n                            \n                        \n\n\n                \n                    \n                            Create Toast of info type\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ToastOptions | string | number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Individual toasty config overrides\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            success\n                            \n                            \n                        \n                    \n                \n                \n                    \nsuccess(options: ToastOptions | string | number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:127\n                            \n                        \n\n\n                \n                    \n                            Create Toast of success type\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ToastOptions | string | number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Individual toasty config overrides\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(options: ToastOptions | string | number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:135\n                            \n                        \n\n\n                \n                    \n                            Create Toast of wait type\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ToastOptions | string | number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Individual toasty config overrides\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            warning\n                            \n                            \n                        \n                    \n                \n                \n                    \nwarning(options: ToastOptions | string | number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:151\n                            \n                        \n\n\n                \n                    \n                            Create Toast of warning type\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ToastOptions | string | number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Individual toasty config overrides\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.eventSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eventSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            THEMES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        THEMES:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['default', 'material', 'bootstrap']\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uniqueCounter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uniqueCounter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:86\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { isString, isNumber, isFunction } from './toasty.utils';\n\nimport {Subject} from 'rxjs';\nimport {Observable} from 'rxjs';\n\n/**\n * Options to configure specific Toast\n */\n@Injectable()\nexport class ToastOptions {\n  title: string;\n  msg?: string;\n  showClose?: boolean;\n  theme?: string;\n  timeout?: number;\n  onAdd?: Function;\n  onRemove?: Function;\n}\n\n/**\n * Structure of Toast\n */\n@Injectable()\nexport class ToastData {\n  id: number;\n  title: string;\n  msg: string;\n  showClose: boolean;\n  type: string;\n  theme: string;\n  timeout: number;\n  onAdd: Function;\n  onRemove: Function;\n  onClick: Function;\n}\n\n/**\n * Default configuration foa all toats and toasty container\n */\n@Injectable()\nexport class ToastyConfig {\n\n  // Maximum number of toasties to show at once\n  limit = 5;\n\n  // Whether to show the 'X' icon to close the toast\n  showClose = true;\n\n  // The window position where the toast pops up\n  position: 'bottom-right' | 'bottom-left' | 'top-right' | 'top-left' | 'top-center' | 'bottom-center' | 'center-center' = 'bottom-right';\n\n  // How long (in miliseconds) the toasty shows before it's removed. Set to null/0 to turn off.\n  timeout = 5000;\n\n  // What theme to use\n  theme: 'default' | 'material' | 'bootstrap' = 'default';\n}\n\nexport enum ToastyEventType {\n  ADD,\n  CLEAR,\n  CLEAR_ALL\n}\n\nexport class ToastyEvent {\n    constructor(public type: ToastyEventType, public value?: any) {}\n}\n\nexport function toastyServiceFactory(config: ToastyConfig): NgxToastnService  {\n    return new NgxToastnService(config);\n}\n\n/**\n * Toasty service helps create different kinds of Toasts\n */\n@Injectable()\nexport class NgxToastnService {\n  // Allowed THEMES\n  static THEMES: Array = ['default', 'material', 'bootstrap'];\n  // Init the counter\n  uniqueCounter = 0;\n  // ToastData event emitter\n  // private toastsEmitter: EventEmitter = new EventEmitter();\n  // Clear event emitter\n  // private clearEmitter: EventEmitter = new EventEmitter();\n\n  private eventSource: Subject = new Subject();\n  public events: Observable = this.eventSource.asObservable();\n\n  constructor(private config: ToastyConfig) {}\n\n  /**\n   * Get list of toats\n   */\n  // getToasts(): Observable {\n  //   return this.toastsEmitter.asObservable();\n  // }\n\n  // getClear(): Observable {\n  //   return this.clearEmitter.asObservable();\n  // }\n\n  /**\n   * Create Toast of a default type\n   */\n  default(options: ToastOptions|string|number): void {\n    this.add(options, 'default');\n  }\n\n  /**\n   * Create Toast of info type\n   * @param options Individual toasty config overrides\n   */\n  info(options: ToastOptions|string|number): void {\n    this.add(options, 'info');\n  }\n\n  /**\n   * Create Toast of success type\n   * @param options Individual toasty config overrides\n   */\n  success(options: ToastOptions|string|number): void {\n    this.add(options, 'success');\n  }\n\n  /**\n   * Create Toast of wait type\n   * @param options Individual toasty config overrides\n   */\n  wait(options: ToastOptions|string|number): void {\n    this.add(options, 'wait');\n  }\n\n  /**\n   * Create Toast of error type\n   * @param options Individual toasty config overrides\n   */\n  error(options: ToastOptions|string|number): void {\n    this.add(options, 'error');\n  }\n\n  /**\n   * Create Toast of warning type\n   * @param options Individual toasty config overrides\n   */\n  warning(options: ToastOptions|string|number): void {\n    this.add(options, 'warning');\n  }\n\n\n  // Add a new toast item\n  private add(options: ToastOptions|string|number, type: string) {\n    let toastyOptions: ToastOptions;\n\n    if (isString(options) && options !== '' || isNumber(options)) {\n      toastyOptions = {\n        title: options.toString()\n      };\n    } else {\n      toastyOptions = options;\n    }\n\n    if (!toastyOptions || !toastyOptions.title && !toastyOptions.msg) {\n      throw new Error('ng2-toasty: No toast title or message specified!');\n    }\n\n    type = type || 'default';\n\n    // Set a unique counter for an id\n    this.uniqueCounter++;\n\n    // Set the local vs global config items\n    let showClose = this._checkConfigItem(this.config, toastyOptions, 'showClose');\n\n    // If we have a theme set, make sure it's a valid one\n    let theme: string;\n    if (toastyOptions.theme) {\n      theme = NgxToastnService.THEMES.indexOf(toastyOptions.theme) > -1 ? toastyOptions.theme : this.config.theme;\n    } else {\n      theme = this.config.theme;\n    }\n\n    let toast: ToastData = {\n      id       : this.uniqueCounter,\n      title    : toastyOptions.title,\n      msg      : toastyOptions.msg,\n      showClose: showClose,\n      type     : 'toasty-type-' + type,\n      theme    : 'toasty-theme-' + theme,\n      onAdd    : toastyOptions.onAdd && isFunction(toastyOptions.onAdd) ? toastyOptions.onAdd : null,\n      onRemove : toastyOptions.onRemove && isFunction(toastyOptions.onRemove) ? toastyOptions.onRemove : null\n    };\n\n    // If there's a timeout individually or globally, set the toast to timeout\n    // Allows a caller to pass null/0 and override the default. Can also set the default to null/0 to turn off.\n    toast.timeout = toastyOptions.hasOwnProperty('timeout') ? toastyOptions.timeout : this.config.timeout;\n\n    // Push up a new toast item\n    // this.toastsSubscriber.next(toast);\n    // this.toastsEmitter.next(toast);\n    this.emitEvent(new ToastyEvent(ToastyEventType.ADD, toast));\n    // If we have a onAdd function, call it here\n    if (toastyOptions.onAdd && isFunction(toastyOptions.onAdd)) {\n      toastyOptions.onAdd.call(this, toast);\n    }\n  }\n\n  // Clear all toasts\n  clearAll() {\n    // this.clearEmitter.next(null);\n    this.emitEvent(new ToastyEvent(ToastyEventType.CLEAR_ALL));\n  }\n\n  // Clear the specific one\n  clear(id: number) {\n    // this.clearEmitter.next(id);\n    this.emitEvent(new ToastyEvent(ToastyEventType.CLEAR, id));\n  }\n\n  // Checks whether the local option is set, if not,\n  // checks the global config\n  private _checkConfigItem(config: any, options: any, property: string) {\n    if (options[property] === false) {\n      return false;\n    } else if (!options[property]) {\n      return config[property];\n    } else {\n      return true;\n    }\n  }\n\n  private emitEvent(event: ToastyEvent) {\n        if (this.eventSource) {\n            // Push up a new event\n            this.eventSource.next(event);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeHtmlPipe.html":{"url":"pipes/SafeHtmlPipe.html","title":"pipe - SafeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-toastn/src/lib/shared.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        safeHtml\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any, ...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/shared.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { DomSanitizer } from '@angular/platform-browser';\nimport { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({ name: 'safeHtml'})\nexport class SafeHtmlPipe implements PipeTransform  {\n    constructor(private domSanitized: DomSanitizer) {}\n\n    transform(value: any, ...args: any[]): any {\n        return this.domSanitized.bypassSecurityTrustHtml(value);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastData.html":{"url":"injectables/ToastData.html","title":"injectable - ToastData","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-toastn/src/lib/ngx-toastn.service.ts\n        \n\n            \n                Description\n            \n            \n                Structure of Toast\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                msg\n                            \n                            \n                                onAdd\n                            \n                            \n                                onClick\n                            \n                            \n                                onRemove\n                            \n                            \n                                showClose\n                            \n                            \n                                theme\n                            \n                            \n                                timeout\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        msg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onAdd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onAdd:     Function\n\n                    \n                \n                    \n                        \n                            Type :     Function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onClick:     Function\n\n                    \n                \n                    \n                        \n                            Type :     Function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onRemove:     Function\n\n                    \n                \n                    \n                        \n                            Type :     Function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showClose:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        theme:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeout:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:34\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { isString, isNumber, isFunction } from './toasty.utils';\n\nimport {Subject} from 'rxjs';\nimport {Observable} from 'rxjs';\n\n/**\n * Options to configure specific Toast\n */\n@Injectable()\nexport class ToastOptions {\n  title: string;\n  msg?: string;\n  showClose?: boolean;\n  theme?: string;\n  timeout?: number;\n  onAdd?: Function;\n  onRemove?: Function;\n}\n\n/**\n * Structure of Toast\n */\n@Injectable()\nexport class ToastData {\n  id: number;\n  title: string;\n  msg: string;\n  showClose: boolean;\n  type: string;\n  theme: string;\n  timeout: number;\n  onAdd: Function;\n  onRemove: Function;\n  onClick: Function;\n}\n\n/**\n * Default configuration foa all toats and toasty container\n */\n@Injectable()\nexport class ToastyConfig {\n\n  // Maximum number of toasties to show at once\n  limit = 5;\n\n  // Whether to show the 'X' icon to close the toast\n  showClose = true;\n\n  // The window position where the toast pops up\n  position: 'bottom-right' | 'bottom-left' | 'top-right' | 'top-left' | 'top-center' | 'bottom-center' | 'center-center' = 'bottom-right';\n\n  // How long (in miliseconds) the toasty shows before it's removed. Set to null/0 to turn off.\n  timeout = 5000;\n\n  // What theme to use\n  theme: 'default' | 'material' | 'bootstrap' = 'default';\n}\n\nexport enum ToastyEventType {\n  ADD,\n  CLEAR,\n  CLEAR_ALL\n}\n\nexport class ToastyEvent {\n    constructor(public type: ToastyEventType, public value?: any) {}\n}\n\nexport function toastyServiceFactory(config: ToastyConfig): NgxToastnService  {\n    return new NgxToastnService(config);\n}\n\n/**\n * Toasty service helps create different kinds of Toasts\n */\n@Injectable()\nexport class NgxToastnService {\n  // Allowed THEMES\n  static THEMES: Array = ['default', 'material', 'bootstrap'];\n  // Init the counter\n  uniqueCounter = 0;\n  // ToastData event emitter\n  // private toastsEmitter: EventEmitter = new EventEmitter();\n  // Clear event emitter\n  // private clearEmitter: EventEmitter = new EventEmitter();\n\n  private eventSource: Subject = new Subject();\n  public events: Observable = this.eventSource.asObservable();\n\n  constructor(private config: ToastyConfig) {}\n\n  /**\n   * Get list of toats\n   */\n  // getToasts(): Observable {\n  //   return this.toastsEmitter.asObservable();\n  // }\n\n  // getClear(): Observable {\n  //   return this.clearEmitter.asObservable();\n  // }\n\n  /**\n   * Create Toast of a default type\n   */\n  default(options: ToastOptions|string|number): void {\n    this.add(options, 'default');\n  }\n\n  /**\n   * Create Toast of info type\n   * @param options Individual toasty config overrides\n   */\n  info(options: ToastOptions|string|number): void {\n    this.add(options, 'info');\n  }\n\n  /**\n   * Create Toast of success type\n   * @param options Individual toasty config overrides\n   */\n  success(options: ToastOptions|string|number): void {\n    this.add(options, 'success');\n  }\n\n  /**\n   * Create Toast of wait type\n   * @param options Individual toasty config overrides\n   */\n  wait(options: ToastOptions|string|number): void {\n    this.add(options, 'wait');\n  }\n\n  /**\n   * Create Toast of error type\n   * @param options Individual toasty config overrides\n   */\n  error(options: ToastOptions|string|number): void {\n    this.add(options, 'error');\n  }\n\n  /**\n   * Create Toast of warning type\n   * @param options Individual toasty config overrides\n   */\n  warning(options: ToastOptions|string|number): void {\n    this.add(options, 'warning');\n  }\n\n\n  // Add a new toast item\n  private add(options: ToastOptions|string|number, type: string) {\n    let toastyOptions: ToastOptions;\n\n    if (isString(options) && options !== '' || isNumber(options)) {\n      toastyOptions = {\n        title: options.toString()\n      };\n    } else {\n      toastyOptions = options;\n    }\n\n    if (!toastyOptions || !toastyOptions.title && !toastyOptions.msg) {\n      throw new Error('ng2-toasty: No toast title or message specified!');\n    }\n\n    type = type || 'default';\n\n    // Set a unique counter for an id\n    this.uniqueCounter++;\n\n    // Set the local vs global config items\n    let showClose = this._checkConfigItem(this.config, toastyOptions, 'showClose');\n\n    // If we have a theme set, make sure it's a valid one\n    let theme: string;\n    if (toastyOptions.theme) {\n      theme = NgxToastnService.THEMES.indexOf(toastyOptions.theme) > -1 ? toastyOptions.theme : this.config.theme;\n    } else {\n      theme = this.config.theme;\n    }\n\n    let toast: ToastData = {\n      id       : this.uniqueCounter,\n      title    : toastyOptions.title,\n      msg      : toastyOptions.msg,\n      showClose: showClose,\n      type     : 'toasty-type-' + type,\n      theme    : 'toasty-theme-' + theme,\n      onAdd    : toastyOptions.onAdd && isFunction(toastyOptions.onAdd) ? toastyOptions.onAdd : null,\n      onRemove : toastyOptions.onRemove && isFunction(toastyOptions.onRemove) ? toastyOptions.onRemove : null\n    };\n\n    // If there's a timeout individually or globally, set the toast to timeout\n    // Allows a caller to pass null/0 and override the default. Can also set the default to null/0 to turn off.\n    toast.timeout = toastyOptions.hasOwnProperty('timeout') ? toastyOptions.timeout : this.config.timeout;\n\n    // Push up a new toast item\n    // this.toastsSubscriber.next(toast);\n    // this.toastsEmitter.next(toast);\n    this.emitEvent(new ToastyEvent(ToastyEventType.ADD, toast));\n    // If we have a onAdd function, call it here\n    if (toastyOptions.onAdd && isFunction(toastyOptions.onAdd)) {\n      toastyOptions.onAdd.call(this, toast);\n    }\n  }\n\n  // Clear all toasts\n  clearAll() {\n    // this.clearEmitter.next(null);\n    this.emitEvent(new ToastyEvent(ToastyEventType.CLEAR_ALL));\n  }\n\n  // Clear the specific one\n  clear(id: number) {\n    // this.clearEmitter.next(id);\n    this.emitEvent(new ToastyEvent(ToastyEventType.CLEAR, id));\n  }\n\n  // Checks whether the local option is set, if not,\n  // checks the global config\n  private _checkConfigItem(config: any, options: any, property: string) {\n    if (options[property] === false) {\n      return false;\n    } else if (!options[property]) {\n      return config[property];\n    } else {\n      return true;\n    }\n  }\n\n  private emitEvent(event: ToastyEvent) {\n        if (this.eventSource) {\n            // Push up a new event\n            this.eventSource.next(event);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastOptions.html":{"url":"injectables/ToastOptions.html","title":"injectable - ToastOptions","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-toastn/src/lib/ngx-toastn.service.ts\n        \n\n            \n                Description\n            \n            \n                Options to configure specific Toast\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                msg\n                            \n                            \n                                    Optional\n                                onAdd\n                            \n                            \n                                    Optional\n                                onRemove\n                            \n                            \n                                    Optional\n                                showClose\n                            \n                            \n                                    Optional\n                                theme\n                            \n                            \n                                    Optional\n                                timeout\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            msg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        msg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            onAdd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onAdd:     Function\n\n                    \n                \n                    \n                        \n                            Type :     Function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            onRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onRemove:     Function\n\n                    \n                \n                    \n                        \n                            Type :     Function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            showClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showClose:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            theme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        theme:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeout:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { isString, isNumber, isFunction } from './toasty.utils';\n\nimport {Subject} from 'rxjs';\nimport {Observable} from 'rxjs';\n\n/**\n * Options to configure specific Toast\n */\n@Injectable()\nexport class ToastOptions {\n  title: string;\n  msg?: string;\n  showClose?: boolean;\n  theme?: string;\n  timeout?: number;\n  onAdd?: Function;\n  onRemove?: Function;\n}\n\n/**\n * Structure of Toast\n */\n@Injectable()\nexport class ToastData {\n  id: number;\n  title: string;\n  msg: string;\n  showClose: boolean;\n  type: string;\n  theme: string;\n  timeout: number;\n  onAdd: Function;\n  onRemove: Function;\n  onClick: Function;\n}\n\n/**\n * Default configuration foa all toats and toasty container\n */\n@Injectable()\nexport class ToastyConfig {\n\n  // Maximum number of toasties to show at once\n  limit = 5;\n\n  // Whether to show the 'X' icon to close the toast\n  showClose = true;\n\n  // The window position where the toast pops up\n  position: 'bottom-right' | 'bottom-left' | 'top-right' | 'top-left' | 'top-center' | 'bottom-center' | 'center-center' = 'bottom-right';\n\n  // How long (in miliseconds) the toasty shows before it's removed. Set to null/0 to turn off.\n  timeout = 5000;\n\n  // What theme to use\n  theme: 'default' | 'material' | 'bootstrap' = 'default';\n}\n\nexport enum ToastyEventType {\n  ADD,\n  CLEAR,\n  CLEAR_ALL\n}\n\nexport class ToastyEvent {\n    constructor(public type: ToastyEventType, public value?: any) {}\n}\n\nexport function toastyServiceFactory(config: ToastyConfig): NgxToastnService  {\n    return new NgxToastnService(config);\n}\n\n/**\n * Toasty service helps create different kinds of Toasts\n */\n@Injectable()\nexport class NgxToastnService {\n  // Allowed THEMES\n  static THEMES: Array = ['default', 'material', 'bootstrap'];\n  // Init the counter\n  uniqueCounter = 0;\n  // ToastData event emitter\n  // private toastsEmitter: EventEmitter = new EventEmitter();\n  // Clear event emitter\n  // private clearEmitter: EventEmitter = new EventEmitter();\n\n  private eventSource: Subject = new Subject();\n  public events: Observable = this.eventSource.asObservable();\n\n  constructor(private config: ToastyConfig) {}\n\n  /**\n   * Get list of toats\n   */\n  // getToasts(): Observable {\n  //   return this.toastsEmitter.asObservable();\n  // }\n\n  // getClear(): Observable {\n  //   return this.clearEmitter.asObservable();\n  // }\n\n  /**\n   * Create Toast of a default type\n   */\n  default(options: ToastOptions|string|number): void {\n    this.add(options, 'default');\n  }\n\n  /**\n   * Create Toast of info type\n   * @param options Individual toasty config overrides\n   */\n  info(options: ToastOptions|string|number): void {\n    this.add(options, 'info');\n  }\n\n  /**\n   * Create Toast of success type\n   * @param options Individual toasty config overrides\n   */\n  success(options: ToastOptions|string|number): void {\n    this.add(options, 'success');\n  }\n\n  /**\n   * Create Toast of wait type\n   * @param options Individual toasty config overrides\n   */\n  wait(options: ToastOptions|string|number): void {\n    this.add(options, 'wait');\n  }\n\n  /**\n   * Create Toast of error type\n   * @param options Individual toasty config overrides\n   */\n  error(options: ToastOptions|string|number): void {\n    this.add(options, 'error');\n  }\n\n  /**\n   * Create Toast of warning type\n   * @param options Individual toasty config overrides\n   */\n  warning(options: ToastOptions|string|number): void {\n    this.add(options, 'warning');\n  }\n\n\n  // Add a new toast item\n  private add(options: ToastOptions|string|number, type: string) {\n    let toastyOptions: ToastOptions;\n\n    if (isString(options) && options !== '' || isNumber(options)) {\n      toastyOptions = {\n        title: options.toString()\n      };\n    } else {\n      toastyOptions = options;\n    }\n\n    if (!toastyOptions || !toastyOptions.title && !toastyOptions.msg) {\n      throw new Error('ng2-toasty: No toast title or message specified!');\n    }\n\n    type = type || 'default';\n\n    // Set a unique counter for an id\n    this.uniqueCounter++;\n\n    // Set the local vs global config items\n    let showClose = this._checkConfigItem(this.config, toastyOptions, 'showClose');\n\n    // If we have a theme set, make sure it's a valid one\n    let theme: string;\n    if (toastyOptions.theme) {\n      theme = NgxToastnService.THEMES.indexOf(toastyOptions.theme) > -1 ? toastyOptions.theme : this.config.theme;\n    } else {\n      theme = this.config.theme;\n    }\n\n    let toast: ToastData = {\n      id       : this.uniqueCounter,\n      title    : toastyOptions.title,\n      msg      : toastyOptions.msg,\n      showClose: showClose,\n      type     : 'toasty-type-' + type,\n      theme    : 'toasty-theme-' + theme,\n      onAdd    : toastyOptions.onAdd && isFunction(toastyOptions.onAdd) ? toastyOptions.onAdd : null,\n      onRemove : toastyOptions.onRemove && isFunction(toastyOptions.onRemove) ? toastyOptions.onRemove : null\n    };\n\n    // If there's a timeout individually or globally, set the toast to timeout\n    // Allows a caller to pass null/0 and override the default. Can also set the default to null/0 to turn off.\n    toast.timeout = toastyOptions.hasOwnProperty('timeout') ? toastyOptions.timeout : this.config.timeout;\n\n    // Push up a new toast item\n    // this.toastsSubscriber.next(toast);\n    // this.toastsEmitter.next(toast);\n    this.emitEvent(new ToastyEvent(ToastyEventType.ADD, toast));\n    // If we have a onAdd function, call it here\n    if (toastyOptions.onAdd && isFunction(toastyOptions.onAdd)) {\n      toastyOptions.onAdd.call(this, toast);\n    }\n  }\n\n  // Clear all toasts\n  clearAll() {\n    // this.clearEmitter.next(null);\n    this.emitEvent(new ToastyEvent(ToastyEventType.CLEAR_ALL));\n  }\n\n  // Clear the specific one\n  clear(id: number) {\n    // this.clearEmitter.next(id);\n    this.emitEvent(new ToastyEvent(ToastyEventType.CLEAR, id));\n  }\n\n  // Checks whether the local option is set, if not,\n  // checks the global config\n  private _checkConfigItem(config: any, options: any, property: string) {\n    if (options[property] === false) {\n      return false;\n    } else if (!options[property]) {\n      return config[property];\n    } else {\n      return true;\n    }\n  }\n\n  private emitEvent(event: ToastyEvent) {\n        if (this.eventSource) {\n            // Push up a new event\n            this.eventSource.next(event);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastyConfig.html":{"url":"injectables/ToastyConfig.html","title":"injectable - ToastyConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastyConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-toastn/src/lib/ngx-toastn.service.ts\n        \n\n            \n                Description\n            \n            \n                Default configuration foa all toats and toasty container\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                position\n                            \n                            \n                                showClose\n                            \n                            \n                                theme\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        limit:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        position:     \"bottom-right\" | \"bottom-left\" | \"top-right\" | \"top-left\" | \"top-center\" | \"bottom-center\" | \"center-center\"\n\n                    \n                \n                    \n                        \n                            Type :     \"bottom-right\" | \"bottom-left\" | \"top-right\" | \"top-left\" | \"top-center\" | \"bottom-center\" | \"center-center\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'bottom-right'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showClose:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        theme:     \"default\" | \"material\" | \"bootstrap\"\n\n                    \n                \n                    \n                        \n                            Type :     \"default\" | \"material\" | \"bootstrap\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'default'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeout:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:58\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { isString, isNumber, isFunction } from './toasty.utils';\n\nimport {Subject} from 'rxjs';\nimport {Observable} from 'rxjs';\n\n/**\n * Options to configure specific Toast\n */\n@Injectable()\nexport class ToastOptions {\n  title: string;\n  msg?: string;\n  showClose?: boolean;\n  theme?: string;\n  timeout?: number;\n  onAdd?: Function;\n  onRemove?: Function;\n}\n\n/**\n * Structure of Toast\n */\n@Injectable()\nexport class ToastData {\n  id: number;\n  title: string;\n  msg: string;\n  showClose: boolean;\n  type: string;\n  theme: string;\n  timeout: number;\n  onAdd: Function;\n  onRemove: Function;\n  onClick: Function;\n}\n\n/**\n * Default configuration foa all toats and toasty container\n */\n@Injectable()\nexport class ToastyConfig {\n\n  // Maximum number of toasties to show at once\n  limit = 5;\n\n  // Whether to show the 'X' icon to close the toast\n  showClose = true;\n\n  // The window position where the toast pops up\n  position: 'bottom-right' | 'bottom-left' | 'top-right' | 'top-left' | 'top-center' | 'bottom-center' | 'center-center' = 'bottom-right';\n\n  // How long (in miliseconds) the toasty shows before it's removed. Set to null/0 to turn off.\n  timeout = 5000;\n\n  // What theme to use\n  theme: 'default' | 'material' | 'bootstrap' = 'default';\n}\n\nexport enum ToastyEventType {\n  ADD,\n  CLEAR,\n  CLEAR_ALL\n}\n\nexport class ToastyEvent {\n    constructor(public type: ToastyEventType, public value?: any) {}\n}\n\nexport function toastyServiceFactory(config: ToastyConfig): NgxToastnService  {\n    return new NgxToastnService(config);\n}\n\n/**\n * Toasty service helps create different kinds of Toasts\n */\n@Injectable()\nexport class NgxToastnService {\n  // Allowed THEMES\n  static THEMES: Array = ['default', 'material', 'bootstrap'];\n  // Init the counter\n  uniqueCounter = 0;\n  // ToastData event emitter\n  // private toastsEmitter: EventEmitter = new EventEmitter();\n  // Clear event emitter\n  // private clearEmitter: EventEmitter = new EventEmitter();\n\n  private eventSource: Subject = new Subject();\n  public events: Observable = this.eventSource.asObservable();\n\n  constructor(private config: ToastyConfig) {}\n\n  /**\n   * Get list of toats\n   */\n  // getToasts(): Observable {\n  //   return this.toastsEmitter.asObservable();\n  // }\n\n  // getClear(): Observable {\n  //   return this.clearEmitter.asObservable();\n  // }\n\n  /**\n   * Create Toast of a default type\n   */\n  default(options: ToastOptions|string|number): void {\n    this.add(options, 'default');\n  }\n\n  /**\n   * Create Toast of info type\n   * @param options Individual toasty config overrides\n   */\n  info(options: ToastOptions|string|number): void {\n    this.add(options, 'info');\n  }\n\n  /**\n   * Create Toast of success type\n   * @param options Individual toasty config overrides\n   */\n  success(options: ToastOptions|string|number): void {\n    this.add(options, 'success');\n  }\n\n  /**\n   * Create Toast of wait type\n   * @param options Individual toasty config overrides\n   */\n  wait(options: ToastOptions|string|number): void {\n    this.add(options, 'wait');\n  }\n\n  /**\n   * Create Toast of error type\n   * @param options Individual toasty config overrides\n   */\n  error(options: ToastOptions|string|number): void {\n    this.add(options, 'error');\n  }\n\n  /**\n   * Create Toast of warning type\n   * @param options Individual toasty config overrides\n   */\n  warning(options: ToastOptions|string|number): void {\n    this.add(options, 'warning');\n  }\n\n\n  // Add a new toast item\n  private add(options: ToastOptions|string|number, type: string) {\n    let toastyOptions: ToastOptions;\n\n    if (isString(options) && options !== '' || isNumber(options)) {\n      toastyOptions = {\n        title: options.toString()\n      };\n    } else {\n      toastyOptions = options;\n    }\n\n    if (!toastyOptions || !toastyOptions.title && !toastyOptions.msg) {\n      throw new Error('ng2-toasty: No toast title or message specified!');\n    }\n\n    type = type || 'default';\n\n    // Set a unique counter for an id\n    this.uniqueCounter++;\n\n    // Set the local vs global config items\n    let showClose = this._checkConfigItem(this.config, toastyOptions, 'showClose');\n\n    // If we have a theme set, make sure it's a valid one\n    let theme: string;\n    if (toastyOptions.theme) {\n      theme = NgxToastnService.THEMES.indexOf(toastyOptions.theme) > -1 ? toastyOptions.theme : this.config.theme;\n    } else {\n      theme = this.config.theme;\n    }\n\n    let toast: ToastData = {\n      id       : this.uniqueCounter,\n      title    : toastyOptions.title,\n      msg      : toastyOptions.msg,\n      showClose: showClose,\n      type     : 'toasty-type-' + type,\n      theme    : 'toasty-theme-' + theme,\n      onAdd    : toastyOptions.onAdd && isFunction(toastyOptions.onAdd) ? toastyOptions.onAdd : null,\n      onRemove : toastyOptions.onRemove && isFunction(toastyOptions.onRemove) ? toastyOptions.onRemove : null\n    };\n\n    // If there's a timeout individually or globally, set the toast to timeout\n    // Allows a caller to pass null/0 and override the default. Can also set the default to null/0 to turn off.\n    toast.timeout = toastyOptions.hasOwnProperty('timeout') ? toastyOptions.timeout : this.config.timeout;\n\n    // Push up a new toast item\n    // this.toastsSubscriber.next(toast);\n    // this.toastsEmitter.next(toast);\n    this.emitEvent(new ToastyEvent(ToastyEventType.ADD, toast));\n    // If we have a onAdd function, call it here\n    if (toastyOptions.onAdd && isFunction(toastyOptions.onAdd)) {\n      toastyOptions.onAdd.call(this, toast);\n    }\n  }\n\n  // Clear all toasts\n  clearAll() {\n    // this.clearEmitter.next(null);\n    this.emitEvent(new ToastyEvent(ToastyEventType.CLEAR_ALL));\n  }\n\n  // Clear the specific one\n  clear(id: number) {\n    // this.clearEmitter.next(id);\n    this.emitEvent(new ToastyEvent(ToastyEventType.CLEAR, id));\n  }\n\n  // Checks whether the local option is set, if not,\n  // checks the global config\n  private _checkConfigItem(config: any, options: any, property: string) {\n    if (options[property] === false) {\n      return false;\n    } else if (!options[property]) {\n      return config[property];\n    } else {\n      return true;\n    }\n  }\n\n  private emitEvent(event: ToastyEvent) {\n        if (this.eventSource) {\n            // Push up a new event\n            this.eventSource.next(event);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToastyEvent.html":{"url":"classes/ToastyEvent.html","title":"class - ToastyEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToastyEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-toastn/src/lib/ngx-toastn.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: ToastyEventType, value?: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    ToastyEventType\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     ToastyEventType\n\n                    \n                \n                    \n                        \n                            Type :     ToastyEventType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-toastn/src/lib/ngx-toastn.service.ts:71\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { isString, isNumber, isFunction } from './toasty.utils';\n\nimport {Subject} from 'rxjs';\nimport {Observable} from 'rxjs';\n\n/**\n * Options to configure specific Toast\n */\n@Injectable()\nexport class ToastOptions {\n  title: string;\n  msg?: string;\n  showClose?: boolean;\n  theme?: string;\n  timeout?: number;\n  onAdd?: Function;\n  onRemove?: Function;\n}\n\n/**\n * Structure of Toast\n */\n@Injectable()\nexport class ToastData {\n  id: number;\n  title: string;\n  msg: string;\n  showClose: boolean;\n  type: string;\n  theme: string;\n  timeout: number;\n  onAdd: Function;\n  onRemove: Function;\n  onClick: Function;\n}\n\n/**\n * Default configuration foa all toats and toasty container\n */\n@Injectable()\nexport class ToastyConfig {\n\n  // Maximum number of toasties to show at once\n  limit = 5;\n\n  // Whether to show the 'X' icon to close the toast\n  showClose = true;\n\n  // The window position where the toast pops up\n  position: 'bottom-right' | 'bottom-left' | 'top-right' | 'top-left' | 'top-center' | 'bottom-center' | 'center-center' = 'bottom-right';\n\n  // How long (in miliseconds) the toasty shows before it's removed. Set to null/0 to turn off.\n  timeout = 5000;\n\n  // What theme to use\n  theme: 'default' | 'material' | 'bootstrap' = 'default';\n}\n\nexport enum ToastyEventType {\n  ADD,\n  CLEAR,\n  CLEAR_ALL\n}\n\nexport class ToastyEvent {\n    constructor(public type: ToastyEventType, public value?: any) {}\n}\n\nexport function toastyServiceFactory(config: ToastyConfig): NgxToastnService  {\n    return new NgxToastnService(config);\n}\n\n/**\n * Toasty service helps create different kinds of Toasts\n */\n@Injectable()\nexport class NgxToastnService {\n  // Allowed THEMES\n  static THEMES: Array = ['default', 'material', 'bootstrap'];\n  // Init the counter\n  uniqueCounter = 0;\n  // ToastData event emitter\n  // private toastsEmitter: EventEmitter = new EventEmitter();\n  // Clear event emitter\n  // private clearEmitter: EventEmitter = new EventEmitter();\n\n  private eventSource: Subject = new Subject();\n  public events: Observable = this.eventSource.asObservable();\n\n  constructor(private config: ToastyConfig) {}\n\n  /**\n   * Get list of toats\n   */\n  // getToasts(): Observable {\n  //   return this.toastsEmitter.asObservable();\n  // }\n\n  // getClear(): Observable {\n  //   return this.clearEmitter.asObservable();\n  // }\n\n  /**\n   * Create Toast of a default type\n   */\n  default(options: ToastOptions|string|number): void {\n    this.add(options, 'default');\n  }\n\n  /**\n   * Create Toast of info type\n   * @param options Individual toasty config overrides\n   */\n  info(options: ToastOptions|string|number): void {\n    this.add(options, 'info');\n  }\n\n  /**\n   * Create Toast of success type\n   * @param options Individual toasty config overrides\n   */\n  success(options: ToastOptions|string|number): void {\n    this.add(options, 'success');\n  }\n\n  /**\n   * Create Toast of wait type\n   * @param options Individual toasty config overrides\n   */\n  wait(options: ToastOptions|string|number): void {\n    this.add(options, 'wait');\n  }\n\n  /**\n   * Create Toast of error type\n   * @param options Individual toasty config overrides\n   */\n  error(options: ToastOptions|string|number): void {\n    this.add(options, 'error');\n  }\n\n  /**\n   * Create Toast of warning type\n   * @param options Individual toasty config overrides\n   */\n  warning(options: ToastOptions|string|number): void {\n    this.add(options, 'warning');\n  }\n\n\n  // Add a new toast item\n  private add(options: ToastOptions|string|number, type: string) {\n    let toastyOptions: ToastOptions;\n\n    if (isString(options) && options !== '' || isNumber(options)) {\n      toastyOptions = {\n        title: options.toString()\n      };\n    } else {\n      toastyOptions = options;\n    }\n\n    if (!toastyOptions || !toastyOptions.title && !toastyOptions.msg) {\n      throw new Error('ng2-toasty: No toast title or message specified!');\n    }\n\n    type = type || 'default';\n\n    // Set a unique counter for an id\n    this.uniqueCounter++;\n\n    // Set the local vs global config items\n    let showClose = this._checkConfigItem(this.config, toastyOptions, 'showClose');\n\n    // If we have a theme set, make sure it's a valid one\n    let theme: string;\n    if (toastyOptions.theme) {\n      theme = NgxToastnService.THEMES.indexOf(toastyOptions.theme) > -1 ? toastyOptions.theme : this.config.theme;\n    } else {\n      theme = this.config.theme;\n    }\n\n    let toast: ToastData = {\n      id       : this.uniqueCounter,\n      title    : toastyOptions.title,\n      msg      : toastyOptions.msg,\n      showClose: showClose,\n      type     : 'toasty-type-' + type,\n      theme    : 'toasty-theme-' + theme,\n      onAdd    : toastyOptions.onAdd && isFunction(toastyOptions.onAdd) ? toastyOptions.onAdd : null,\n      onRemove : toastyOptions.onRemove && isFunction(toastyOptions.onRemove) ? toastyOptions.onRemove : null\n    };\n\n    // If there's a timeout individually or globally, set the toast to timeout\n    // Allows a caller to pass null/0 and override the default. Can also set the default to null/0 to turn off.\n    toast.timeout = toastyOptions.hasOwnProperty('timeout') ? toastyOptions.timeout : this.config.timeout;\n\n    // Push up a new toast item\n    // this.toastsSubscriber.next(toast);\n    // this.toastsEmitter.next(toast);\n    this.emitEvent(new ToastyEvent(ToastyEventType.ADD, toast));\n    // If we have a onAdd function, call it here\n    if (toastyOptions.onAdd && isFunction(toastyOptions.onAdd)) {\n      toastyOptions.onAdd.call(this, toast);\n    }\n  }\n\n  // Clear all toasts\n  clearAll() {\n    // this.clearEmitter.next(null);\n    this.emitEvent(new ToastyEvent(ToastyEventType.CLEAR_ALL));\n  }\n\n  // Clear the specific one\n  clear(id: number) {\n    // this.clearEmitter.next(id);\n    this.emitEvent(new ToastyEvent(ToastyEventType.CLEAR, id));\n  }\n\n  // Checks whether the local option is set, if not,\n  // checks the global config\n  private _checkConfigItem(config: any, options: any, property: string) {\n    if (options[property] === false) {\n      return false;\n    } else if (!options[property]) {\n      return config[property];\n    } else {\n      return true;\n    }\n  }\n\n  private emitEvent(event: ToastyEvent) {\n        if (this.eventSource) {\n            // Push up a new event\n            this.eventSource.next(event);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    projects/ngx-toastn/src/lib/ngx-toast.component.ts\n            \n            \n                component\n            \n            \n                NgxToastComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                    projects/ngx-toastn/src/lib/ngx-toastn.component.ts\n            \n            \n                component\n            \n            \n                NgxToastnComponent\n            \n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                    projects/ngx-toastn/src/lib/ngx-toastn.module.ts\n            \n            \n                variable\n            \n            \n                providers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ngx-toastn/src/lib/ngx-toastn.service.ts\n            \n            \n                class\n            \n            \n                ToastyEvent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    projects/ngx-toastn/src/lib/ngx-toastn.service.ts\n            \n            \n                injectable\n            \n            \n                NgxToastnService\n            \n            \n                41 %\n                (7/17)\n            \n        \n        \n            \n                \n                    projects/ngx-toastn/src/lib/ngx-toastn.service.ts\n            \n            \n                injectable\n            \n            \n                ToastData\n            \n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                    projects/ngx-toastn/src/lib/ngx-toastn.service.ts\n            \n            \n                injectable\n            \n            \n                ToastOptions\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                    projects/ngx-toastn/src/lib/ngx-toastn.service.ts\n            \n            \n                injectable\n            \n            \n                ToastyConfig\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                    projects/ngx-toastn/src/lib/ngx-toastn.service.ts\n            \n            \n                function\n            \n            \n                toastyServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ngx-toastn/src/lib/shared.ts\n            \n            \n                pipe\n            \n            \n                SafeHtmlPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ngx-toastn/src/lib/toasty.utils.ts\n            \n            \n                function\n            \n            \n                isFunction\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/ngx-toastn/src/lib/toasty.utils.ts\n            \n            \n                function\n            \n            \n                isNumber\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/ngx-toastn/src/lib/toasty.utils.ts\n            \n            \n                function\n            \n            \n                isString\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ToastyEventType   (projects/.../ngx-toastn.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-toastn/src/lib/ngx-toastn.service.ts\n    \n        \n            \n                \n                    \n                        \n                        ToastyEventType\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                 CLEAR\n                            \n                        \n                        \n                            \n                                 CLEAR_ALL\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isFunction   (projects/.../toasty.utils.ts)\n                        \n                        \n                            isNumber   (projects/.../toasty.utils.ts)\n                        \n                        \n                            isString   (projects/.../toasty.utils.ts)\n                        \n                        \n                            toastyServiceFactory   (projects/.../ngx-toastn.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-toastn/src/lib/toasty.utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFunction(obj: any)\n                    \n                \n\n\n\n\n                \n                    \n                            Check and return true if an object is type of Function\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Analyse has to object the function type\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nisNumber(obj: any)\n                    \n                \n\n\n\n\n                \n                    \n                            Check and return true if an object is type of number\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Analyse has to object the boolean type\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isString\n                            \n                            \n                        \n                    \n                \n                \n                    \nisString(obj: any)\n                    \n                \n\n\n\n\n                \n                    \n                            Check and return true if an object is type of string\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Analyse has to object the string type\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/ngx-toastn/src/lib/ngx-toastn.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toastyServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoastyServiceFactory(config: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nAngular Libraries\n_A group of libraries for everyday angular usage.\nDocumentation:\n\nList View\nSimple Accordion\nToastn\nYii2 Rest\n\n\nThe MIT License (MIT)\n\n\nCopyright (c) 2015 Damian Dennis\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxToastnModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxToastnModule\n\n\n\ncluster_NgxToastnModule_declarations\n\n\n\ncluster_NgxToastnModule_exports\n\n\n\ncluster_NgxToastnModule_providers\n\n\n\n\nNgxToastComponent\n\nNgxToastComponent\n\n\n\nNgxToastnModule\n\nNgxToastnModule\n\nNgxToastnModule -->\n\nNgxToastComponent->NgxToastnModule\n\n\n\n\n\nNgxToastnComponent\n\nNgxToastnComponent\n\nNgxToastnModule -->\n\nNgxToastnComponent->NgxToastnModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nNgxToastnModule -->\n\nSafeHtmlPipe->NgxToastnModule\n\n\n\n\n\nNgxToastComponent \n\nNgxToastComponent \n\nNgxToastComponent  -->\n\nNgxToastnModule->NgxToastComponent \n\n\n\n\n\nNgxToastnComponent \n\nNgxToastnComponent \n\nNgxToastnComponent  -->\n\nNgxToastnModule->NgxToastnComponent \n\n\n\n\n\nToastyConfig\n\nToastyConfig\n\nNgxToastnModule -->\n\nToastyConfig->NgxToastnModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            providers   (projects/.../ngx-toastn.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-toastn/src/lib/ngx-toastn.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        providers:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ToastyConfig,\n  { provide: NgxToastnService, useFactory: toastyServiceFactory, deps: [ToastyConfig] }\n]\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
