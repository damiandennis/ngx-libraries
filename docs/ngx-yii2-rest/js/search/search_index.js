var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/AuthRequestInterface.html",[0,0.944,1,0.944]],["body/interfaces/AuthRequestInterface.html",[0,1.518,1,1.518,2,1.236,3,1.236,4,0.728,5,0.894,6,0.894,7,2.517,8,2.049,9,1.177,10,1.945,11,2.84,12,2.84,13,3.384,14,1.831,15,1.236,16,2.756,17,0.894,18,0.093,19,1.236,20,0.079,21,0.079]],["title/injectables/AuthService.html",[22,0.556,23,1.21]],["body/injectables/AuthService.html",[1,0.889,2,0.424,3,0.424,4,0.25,5,0.919,6,0.919,9,0.329,10,0.894,11,1.887,12,1.473,14,1.62,15,1.536,17,0.888,18,0.099,19,0.424,20,0.036,21,0.036,22,0.523,23,1.319,24,0.703,25,3.736,26,2.296,27,2.712,28,2.296,29,3.646,30,1.156,31,1.555,32,2.296,33,1.555,34,2.296,35,2.296,36,2.296,37,2.296,38,2.296,39,1.555,40,2.296,41,1.555,42,2.145,43,0.945,44,1.555,45,3.013,46,1.138,47,1.138,48,1.4,49,1.555,50,2.885,51,1.555,52,0.945,53,3.122,54,1.555,55,0.945,56,1.555,57,2.296,58,2.296,59,3.013,60,2.449,61,0.945,62,0.945,63,2.537,64,2.241,65,0.945,66,1.473,67,1.555,68,1.156,69,2.296,70,1.156,71,0.945,72,2.729,73,0.945,74,0.945,75,1.555,76,0.945,77,1.156,78,1.555,79,0.945,80,1.156,81,1.555,82,1.555,83,1.03,84,1.156,85,1.156,86,1.981,87,2.296,88,1.555,89,0.945,90,2.296,91,0.945,92,2.296,93,1.707,94,1.555,95,0.945,96,2.241,97,0.543,98,0.543,99,0.945,100,1.156,101,0.945,102,0.945,103,0.945,104,1.555,105,0.945,106,0.703,107,0.945,108,0.945,109,0.945,110,2.029,111,0.25,112,0.945,113,0.945,114,2.241,115,0.945,116,0.945,117,0.945,118,0.945,119,1.981,120,0.945,121,0.945,122,0.945,123,0.945,124,0.945,125,0.945,126,0.945,127,1.555,128,0.945,129,0.945,130,0.945,131,0.703,132,0.945,133,0.945,134,0.945,135,0.703,136,1.555,137,0.945,138,0.945]],["title/classes/BaseModel.html",[83,0.944,111,0.556]],["body/classes/BaseModel.html",[2,1.206,3,1.206,4,0.71,5,0.88,6,0.88,15,1.206,17,0.71,18,0.098,19,1.206,20,0.078,21,0.078,46,1.206,47,1.206,48,1.206,64,2.95,80,2.478,83,1.495,106,2.478,110,1.999,111,0.88,139,1.999,140,1.999,141,3.333,142,2.689,143,2.689,144,2.689,145,2.689,146,2.689,147,2.689]],["title/injectables/ErrorService.html",[22,0.556,148,1.21]],["body/injectables/ErrorService.html",[2,0.436,3,0.436,4,0.256,5,0.938,6,0.938,9,0.338,10,0.914,14,1.572,15,1.572,17,0.925,18,0.099,19,0.436,20,0.037,21,0.037,22,0.533,27,2.828,30,1.183,42,2.265,46,1.24,47,1.24,48,1.24,50,2.056,60,2.265,66,1.183,70,1.915,77,1.735,85,2.412,96,1.183,97,0.558,111,0.256,114,1.183,131,1.183,135,1.183,140,0.722,148,0.914,149,0.722,150,2.334,151,2.334,152,2.334,153,2.334,154,2.334,155,3.451,156,2.334,157,2.334,158,1.59,159,1.59,160,1.59,161,1.59,162,2.765,163,0.971,164,1.59,165,1.59,166,0.971,167,3.046,168,1.59,169,3.594,170,1.59,171,0.971,172,1.59,173,1.59,174,1.59,175,0.971,176,2.334,177,1.59,178,1.59,179,0.971,180,2.334,181,1.59,182,1.59,183,1.59,184,1.59,185,2.575,186,2.019,187,2.765,188,2.334,189,0.971,190,1.59,191,1.59,192,2.334,193,2.334,194,2.334,195,1.59,196,0.971,197,2.334,198,0.971,199,2.334,200,1.59,201,1.183,202,0.971,203,2.334,204,0.971,205,2.334,206,0.971,207,0.971,208,0.971,209,1.59,210,0.722,211,0.971,212,0.971,213,0.971,214,0.971,215,0.971,216,0.971,217,0.971,218,1.59,219,0.971,220,0.971,221,0.971,222,2.919,223,0.971,224,0.971,225,1.183,226,2.334,227,1.59,228,3.046,229,1.59,230,1.59,231,3.153,232,1.59,233,0.971,234,0.971,235,2.019,236,2.019,237,2.334,238,1.59,239,0.971,240,0.971,241,0.971,242,0.971,243,1.59]],["title/coverage.html",[244,2.115]],["body/coverage.html",[0,1.116,1,1.116,4,0.657,5,1.057,6,1.057,7,1.851,8,1.851,17,0.657,18,0.095,20,0.074,21,0.074,22,0.923,23,1.43,24,1.851,83,1.116,93,1.851,98,1.43,111,0.657,139,1.851,148,1.43,149,1.851,244,1.851,245,1.851,246,2.489,247,2.489,248,3.496,249,2.489,250,2.489,251,2.489,252,2.489,253,2.489,254,2.489,255,2.489,256,2.489,257,2.489,258,2.489,259,2.489,260,2.489,261,1.851,262,2.009,263,1.851,264,3.175,265,1.851,266,1.851,267,1.851,268,2.489,269,2.489,270,2.489,271,2.489]],["title/dependencies.html",[272,1.772,273,1.877]],["body/dependencies.html",[18,0.098,20,0.08,21,0.08,97,1.607,100,2.079,210,2.079,273,2.079,274,2.796,275,4.123,276,2.796,277,2.796,278,2.796,279,2.796,280,3.414,281,3.414,282,2.796,283,2.796,284,2.796,285,2.796,286,2.796,287,2.796,288,2.796]],["title/miscellaneous/functions.html",[262,1.45,289,1.318]],["body/miscellaneous/functions.html",[5,0.966,6,0.966,9,0.955,14,1.232,17,0.966,18,0.091,20,0.079,21,0.079,46,1.64,47,1.64,48,1.64,84,2.511,98,1.941,261,2.042,262,1.578,263,2.511,265,2.042,266,2.511,267,2.042,289,2.042,290,2.746,291,2.746,292,2.746,293,2.746,294,2.746,295,2.746,296,2.746,297,2.746,298,2.746,299,2.746]],["title/index.html",[9,0.616,300,1.772,301,1.772]],["body/index.html",[4,0.582,18,0.068,20,0.068,21,0.068,68,1.639,201,2.181,245,2.451,302,2.933,303,3.296,304,2.204,305,2.204,306,2.204,307,2.204,308,2.204,309,2.204,310,2.933,311,2.204,312,2.204,313,2.204,314,3.296,315,2.204,316,2.204,317,2.933,318,2.204,319,3.296,320,2.204,321,2.204,322,2.204,323,2.204,324,2.204,325,2.204,326,2.204,327,2.204,328,2.933,329,2.204,330,3.514,331,3.949,332,2.204,333,2.933,334,3.296,335,2.204,336,3.296,337,2.933,338,2.204,339,2.204,340,2.204,341,2.204,342,2.204,343,2.204,344,2.204,345,2.204,346,2.204,347,2.204,348,2.204,349,2.204,350,2.204,351,2.204,352,2.933,353,2.933,354,2.204,355,2.204,356,2.204,357,2.933,358,2.204,359,2.204,360,2.204,361,2.204,362,2.204,363,2.204,364,2.204,365,2.204,366,2.204,367,2.204,368,2.204,369,2.204,370,2.204,371,2.204,372,2.204,373,2.204,374,2.204,375,2.204,376,2.204,377,2.204,378,2.204,379,2.204]],["title/modules.html",[380,2.115]],["body/modules.html",[18,0.087,20,0.087,21,0.087,380,2.433]],["title/overview.html",[381,2.115]],["body/overview.html",[0,1.431,18,0.086,20,0.086,21,0.086,22,0.842,111,0.842,225,2.746,381,2.372,382,3.19]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":225,"title":{},"body":{"injectables/ErrorService.html":{},"overview.html":{}}}],["1/1",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["10/14",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["2.5.4",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["2015",{"_index":321,"title":{},"body":{"index.html":{}}}],["27/29",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":382,"title":{},"body":{"overview.html":{}}}],["33",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":232,"title":{},"body":{"injectables/ErrorService.html":{}}}],["403",{"_index":203,"title":{},"body":{"injectables/ErrorService.html":{}}}],["422",{"_index":229,"title":{},"body":{"injectables/ErrorService.html":{}}}],["5/15",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":197,"title":{},"body":{"injectables/ErrorService.html":{}}}],["6.0.0",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":257,"title":{},"body":{"coverage.html":{}}}],["_a",{"_index":304,"title":{},"body":{"index.html":{}}}],["_header",{"_index":26,"title":{},"body":{"injectables/AuthService.html":{}}}],["abov",{"_index":351,"title":{},"body":{"index.html":{}}}],["abstract",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{}}}],["accept",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{}}}],["access",{"_index":173,"title":{},"body":{"injectables/ErrorService.html":{}}}],["action",{"_index":374,"title":{},"body":{"index.html":{}}}],["ad",{"_index":308,"title":{},"body":{"index.html":{}}}],["add",{"_index":44,"title":{},"body":{"injectables/AuthService.html":{}}}],["addhead",{"_index":31,"title":{},"body":{"injectables/AuthService.html":{}}}],["addheader(key",{"_index":41,"title":{},"body":{"injectables/AuthService.html":{}}}],["again",{"_index":194,"title":{},"body":{"injectables/ErrorService.html":{}}}],["alert(this.criticalmessag",{"_index":212,"title":{},"body":{"injectables/ErrorService.html":{}}}],["alert(this.forbiddenmessag",{"_index":220,"title":{},"body":{"injectables/ErrorService.html":{}}}],["alert(this.unauthorisedmessag",{"_index":221,"title":{},"body":{"injectables/ErrorService.html":{}}}],["alert(this.validationmessag",{"_index":216,"title":{},"body":{"injectables/ErrorService.html":{}}}],["and/or",{"_index":344,"title":{},"body":{"index.html":{}}}],["angular",{"_index":302,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular/compil",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":210,"title":{},"body":{"injectables/ErrorService.html":{},"dependencies.html":{}}}],["api",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["application/json",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{}}}],["application/x",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{}}}],["aris",{"_index":378,"title":{},"body":{"index.html":{}}}],["associ",{"_index":332,"title":{},"body":{"index.html":{}}}],["auth",{"_index":58,"title":{},"body":{"injectables/AuthService.html":{}}}],["authent",{"_index":32,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticate(usernam",{"_index":51,"title":{},"body":{"injectables/AuthService.html":{}}}],["author",{"_index":367,"title":{},"body":{"index.html":{}}}],["authparam",{"_index":33,"title":{},"body":{"injectables/AuthService.html":{}}}],["authparams(param",{"_index":54,"title":{},"body":{"injectables/AuthService.html":{}}}],["authrequestinterfac",{"_index":1,"title":{"interfaces/AuthRequestInterface.html":{}},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authservic",{"_index":23,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["authurl",{"_index":34,"title":{},"body":{"injectables/AuthService.html":{}}}],["basemodel",{"_index":83,"title":{"classes/BaseModel.html":{}},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{},"coverage.html":{}}}],["behaviorsubject",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(nul",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{}}}],["bodi",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{}}}],["boolean",{"_index":186,"title":{},"body":{"injectables/ErrorService.html":{}}}],["break",{"_index":231,"title":{},"body":{"injectables/ErrorService.html":{}}}],["browser",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["c",{"_index":320,"title":{},"body":{"index.html":{}}}],["case",{"_index":228,"title":{},"body":{"injectables/ErrorService.html":{}}}],["caught",{"_index":181,"title":{},"body":{"injectables/ErrorService.html":{}}}],["charg",{"_index":327,"title":{},"body":{"index.html":{}}}],["claim",{"_index":370,"title":{},"body":{"index.html":{}}}],["class",{"_index":111,"title":{"classes/BaseModel.html":{}},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{},"coverage.html":{},"overview.html":{}}}],["client",{"_index":182,"title":{},"body":{"injectables/ErrorService.html":{}}}],["condit",{"_index":350,"title":{},"body":{"index.html":{}}}],["connect",{"_index":379,"title":{},"body":{"index.html":{}}}],["console.error(error",{"_index":237,"title":{},"body":{"injectables/ErrorService.html":{}}}],["const",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["constructor",{"_index":140,"title":{},"body":{"classes/BaseModel.html":{},"injectables/ErrorService.html":{}}}],["constructor(data",{"_index":141,"title":{},"body":{"classes/BaseModel.html":{}}}],["constructor(publ",{"_index":211,"title":{},"body":{"injectables/ErrorService.html":{}}}],["constructor(rout",{"_index":163,"title":{},"body":{"injectables/ErrorService.html":{}}}],["content",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["contract",{"_index":375,"title":{},"body":{"index.html":{}}}],["convert",{"_index":298,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copi",{"_index":330,"title":{},"body":{"index.html":{}}}],["copyright",{"_index":319,"title":{},"body":{"index.html":{}}}],["core",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":244,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["critic",{"_index":168,"title":{},"body":{"injectables/ErrorService.html":{}}}],["criticalmessag",{"_index":150,"title":{},"body":{"injectables/ErrorService.html":{}}}],["current",{"_index":67,"title":{},"body":{"injectables/AuthService.html":{}}}],["damag",{"_index":371,"title":{},"body":{"index.html":{}}}],["damian",{"_index":322,"title":{},"body":{"index.html":{}}}],["data",{"_index":64,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{}}}],["data.id",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["data[key",{"_index":147,"title":{},"body":{"classes/BaseModel.html":{}}}],["deal",{"_index":333,"title":{},"body":{"index.html":{}}}],["default",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["defin",{"_index":15,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{}}}],["denni",{"_index":323,"title":{},"body":{"index.html":{}}}],["depend",{"_index":273,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["distribut",{"_index":342,"title":{},"body":{"index.html":{}}}],["document",{"_index":245,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["done",{"_index":312,"title":{},"body":{"index.html":{}}}],["dynam",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["endpointservic",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["error",{"_index":169,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error.error.map((item",{"_index":214,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error.statu",{"_index":226,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errorrout",{"_index":151,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errorservic",{"_index":148,"title":{"injectables/ErrorService.html":{}},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["event",{"_index":366,"title":{},"body":{"index.html":{}}}],["everyday",{"_index":306,"title":{},"body":{"index.html":{}}}],["excluderout",{"_index":188,"title":{},"body":{"injectables/ErrorService.html":{}}}],["excluderouter.indexof('no",{"_index":239,"title":{},"body":{"injectables/ErrorService.html":{}}}],["excluderouter.indexof(error.statu",{"_index":224,"title":{},"body":{"injectables/ErrorService.html":{}}}],["expand",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":19,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{}}}],["express",{"_index":359,"title":{},"body":{"index.html":{}}}],["fals",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["fetch",{"_index":63,"title":{},"body":{"injectables/AuthService.html":{}}}],["fetchsess",{"_index":35,"title":{},"body":{"injectables/AuthService.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{},"coverage.html":{},"index.html":{}}}],["fit",{"_index":362,"title":{},"body":{"index.html":{}}}],["follow",{"_index":349,"title":{},"body":{"index.html":{}}}],["forbiddenmessag",{"_index":152,"title":{},"body":{"injectables/ErrorService.html":{}}}],["forbiddenrout",{"_index":153,"title":{},"body":{"injectables/ErrorService.html":{}}}],["form",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{}}}],["free",{"_index":326,"title":{},"body":{"index.html":{}}}],["function",{"_index":262,"title":{"miscellaneous/functions.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":347,"title":{},"body":{"index.html":{}}}],["futur",{"_index":316,"title":{},"body":{"index.html":{}}}],["gener",{"_index":190,"title":{},"body":{"injectables/ErrorService.html":{}}}],["get",{"_index":300,"title":{"index.html":{}},"body":{}}],["grant",{"_index":325,"title":{},"body":{"index.html":{}}}],["group",{"_index":305,"title":{},"body":{"index.html":{}}}],["handl",{"_index":167,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handlecriticalrespons",{"_index":158,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handlecriticalresponse(error",{"_index":165,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handleforbiddenrespons",{"_index":159,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handleforbiddenresponse(error",{"_index":170,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handleunauthorisedrespons",{"_index":160,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handleunauthorisedresponse(error",{"_index":174,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handlevalidationrespons",{"_index":161,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handlevalidationresponse(error",{"_index":178,"title":{},"body":{"injectables/ErrorService.html":{}}}],["header",{"_index":45,"title":{},"body":{"injectables/AuthService.html":{}}}],["herebi",{"_index":324,"title":{},"body":{"index.html":{}}}],["holder",{"_index":368,"title":{},"body":{"index.html":{}}}],["http",{"_index":28,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpclient",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpheader",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpheaders(this._head",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://damiandennis.github.io/ngx",{"_index":309,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["impli",{"_index":360,"title":{},"body":{"index.html":{}}}],["import",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["includ",{"_index":336,"title":{},"body":{"index.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{}}}],["inject",{"_index":22,"title":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"coverage.html":{},"overview.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/AuthRequestInterface.html":{}},"body":{"interfaces/AuthRequestInterface.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces/auth",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{}}}],["isjsobject",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isjsobject(o",{"_index":293,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isprimit",{"_index":266,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isprimitive(obj",{"_index":295,"title":{},"body":{"miscellaneous/functions.html":{}}}],["issu",{"_index":209,"title":{},"body":{"injectables/ErrorService.html":{}}}],["item.messag",{"_index":215,"title":{},"body":{"injectables/ErrorService.html":{}}}],["js",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":49,"title":{},"body":{"injectables/AuthService.html":{}}}],["kind",{"_index":358,"title":{},"body":{"index.html":{}}}],["lack",{"_index":200,"title":{},"body":{"injectables/ErrorService.html":{}}}],["lastloc",{"_index":187,"title":{},"body":{"injectables/ErrorService.html":{}}}],["later",{"_index":195,"title":{},"body":{"injectables/ErrorService.html":{}}}],["liabil",{"_index":372,"title":{},"body":{"index.html":{}}}],["liabl",{"_index":369,"title":{},"body":{"index.html":{}}}],["librari",{"_index":303,"title":{},"body":{"index.html":{}}}],["licens",{"_index":318,"title":{},"body":{"index.html":{}}}],["limit",{"_index":337,"title":{},"body":{"index.html":{}}}],["liter",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":66,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["login",{"_index":205,"title":{},"body":{"injectables/ErrorService.html":{}}}],["loginrout",{"_index":154,"title":{},"body":{"injectables/ErrorService.html":{}}}],["logout",{"_index":36,"title":{},"body":{"injectables/AuthService.html":{}}}],["make",{"_index":313,"title":{},"body":{"index.html":{}}}],["map",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{}}}],["map((data",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((key",{"_index":145,"title":{},"body":{"classes/BaseModel.html":{}}}],["match",{"_index":21,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["merchant",{"_index":361,"title":{},"body":{"index.html":{}}}],["merg",{"_index":340,"title":{},"body":{"index.html":{}}}],["messag",{"_index":213,"title":{},"body":{"injectables/ErrorService.html":{}}}],["messages.join(`\\n",{"_index":219,"title":{},"body":{"injectables/ErrorService.html":{}}}],["method",{"_index":30,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["miscellan",{"_index":289,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":317,"title":{},"body":{"index.html":{}}}],["model",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{}}}],["models/base.model",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{}}}],["modifi",{"_index":339,"title":{},"body":{"index.html":{}}}],["modul",{"_index":380,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":310,"title":{},"body":{"index.html":{}}}],["n\\n",{"_index":217,"title":{},"body":{"injectables/ErrorService.html":{}}}],["name",{"_index":47,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{},"miscellaneous/functions.html":{}}}],["near",{"_index":315,"title":{},"body":{"index.html":{}}}],["new",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["noninfring",{"_index":365,"title":{},"body":{"index.html":{}}}],["notic",{"_index":352,"title":{},"body":{"index.html":{}}}],["null",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["o",{"_index":294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["obj",{"_index":296,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["object.keys(data",{"_index":144,"title":{},"body":{"classes/BaseModel.html":{}}}],["objecttoparam",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["objecttoparams(bodi",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["objecttoparams(object",{"_index":297,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objecttoparams(this.sessionparam",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["observ",{"_index":53,"title":{},"body":{"injectables/AuthService.html":{}}}],["obtain",{"_index":329,"title":{},"body":{"index.html":{}}}],["option",{"_index":48,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":377,"title":{},"body":{"index.html":{}}}],["out",{"_index":68,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["overview",{"_index":381,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":272,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":60,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["paramet",{"_index":46,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{},"miscellaneous/functions.html":{}}}],["parametris",{"_index":299,"title":{},"body":{"miscellaneous/functions.html":{}}}],["particular",{"_index":363,"title":{},"body":{"index.html":{}}}],["pass",{"_index":177,"title":{},"body":{"injectables/ErrorService.html":{}}}],["password",{"_index":11,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{}}}],["payload",{"_index":56,"title":{},"body":{"injectables/AuthService.html":{}}}],["permiss",{"_index":201,"title":{},"body":{"injectables/ErrorService.html":{},"index.html":{}}}],["permit",{"_index":346,"title":{},"body":{"index.html":{}}}],["person",{"_index":328,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["pleas",{"_index":192,"title":{},"body":{"injectables/ErrorService.html":{}}}],["point.service.t",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["portion",{"_index":355,"title":{},"body":{"index.html":{}}}],["problem",{"_index":191,"title":{},"body":{"injectables/ErrorService.html":{}}}],["projects/.../is.js.object.t",{"_index":290,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../is.primative.t",{"_index":291,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../object.to.params.t",{"_index":292,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngx",{"_index":5,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["properti",{"_index":10,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["protect",{"_index":25,"title":{},"body":{"injectables/AuthService.html":{}}}],["provid",{"_index":356,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{}}}],["public",{"_index":27,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["publish",{"_index":341,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":364,"title":{},"body":{"index.html":{}}}],["queryparam",{"_index":222,"title":{},"body":{"injectables/ErrorService.html":{}}}],["queryparams.lastloc",{"_index":223,"title":{},"body":{"injectables/ErrorService.html":{}}}],["repres",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{}}}],["request",{"_index":199,"title":{},"body":{"injectables/ErrorService.html":{}}}],["request.interfac",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{}}}],["request.interface.t",{"_index":8,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"coverage.html":{}}}],["request.interface.ts:3",{"_index":16,"title":{},"body":{"interfaces/AuthRequestInterface.html":{}}}],["requir",{"_index":176,"title":{},"body":{"injectables/ErrorService.html":{}}}],["respons",{"_index":162,"title":{},"body":{"injectables/ErrorService.html":{}}}],["response(error",{"_index":184,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rest/src/lib/interfaces/auth",{"_index":7,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"coverage.html":{}}}],["rest/src/lib/models/base.model.t",{"_index":139,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{}}}],["rest/src/lib/models/base.model.ts:1",{"_index":142,"title":{},"body":{"classes/BaseModel.html":{}}}],["rest/src/lib/services/auth.service.t",{"_index":24,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["rest/src/lib/services/auth.service.ts:110",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest/src/lib/services/auth.service.ts:119",{"_index":65,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest/src/lib/services/auth.service.ts:15",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest/src/lib/services/auth.service.ts:16",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest/src/lib/services/auth.service.ts:17",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest/src/lib/services/auth.service.ts:24",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest/src/lib/services/auth.service.ts:29",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest/src/lib/services/auth.service.ts:34",{"_index":71,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest/src/lib/services/auth.service.ts:39",{"_index":61,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest/src/lib/services/auth.service.ts:46",{"_index":55,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest/src/lib/services/auth.service.ts:55",{"_index":43,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest/src/lib/services/auth.service.ts:67",{"_index":52,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest/src/lib/services/auth.service.ts:84",{"_index":62,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest/src/lib/services/end",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["rest/src/lib/services/error.service.t",{"_index":149,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["rest/src/lib/services/error.service.ts:10",{"_index":196,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rest/src/lib/services/error.service.ts:11",{"_index":202,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rest/src/lib/services/error.service.ts:12",{"_index":208,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rest/src/lib/services/error.service.ts:13",{"_index":164,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rest/src/lib/services/error.service.ts:15",{"_index":207,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rest/src/lib/services/error.service.ts:22",{"_index":166,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rest/src/lib/services/error.service.ts:31",{"_index":179,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rest/src/lib/services/error.service.ts:43",{"_index":171,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rest/src/lib/services/error.service.ts:52",{"_index":175,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rest/src/lib/services/error.service.ts:64",{"_index":189,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rest/src/lib/services/error.service.ts:7",{"_index":206,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rest/src/lib/services/error.service.ts:8",{"_index":198,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rest/src/lib/services/error.service.ts:9",{"_index":204,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rest/src/lib/utils/is.js.object.t",{"_index":261,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["rest/src/lib/utils/is.primative.t",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["rest/src/lib/utils/object.to.params.t",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["restrict",{"_index":335,"title":{},"body":{"index.html":{}}}],["result",{"_index":20,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":50,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["right",{"_index":338,"title":{},"body":{"index.html":{}}}],["root",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{}}}],["router",{"_index":155,"title":{},"body":{"injectables/ErrorService.html":{}}}],["rxj",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{}}}],["sell",{"_index":345,"title":{},"body":{"index.html":{}}}],["send",{"_index":57,"title":{},"body":{"injectables/AuthService.html":{}}}],["server",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["session",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionparam",{"_index":37,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionurl",{"_index":38,"title":{},"body":{"injectables/AuthService.html":{}}}],["setident",{"_index":39,"title":{},"body":{"injectables/AuthService.html":{}}}],["setidentity(data",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{}}}],["shall",{"_index":353,"title":{},"body":{"index.html":{}}}],["side",{"_index":183,"title":{},"body":{"injectables/ErrorService.html":{}}}],["skiplocationchang",{"_index":235,"title":{},"body":{"injectables/ErrorService.html":{}}}],["softwar",{"_index":331,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{}}}],["start",{"_index":301,"title":{"index.html":{}},"body":{}}],["statement",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":240,"title":{},"body":{"injectables/ErrorService.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"miscellaneous/functions.html":{}}}],["subject",{"_index":348,"title":{},"body":{"index.html":{}}}],["sublicens",{"_index":343,"title":{},"body":{"index.html":{}}}],["substanti",{"_index":354,"title":{},"body":{"index.html":{}}}],["switch",{"_index":227,"title":{},"body":{"injectables/ErrorService.html":{}}}],["system",{"_index":69,"title":{},"body":{"injectables/AuthService.html":{}}}],["tabl",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["this._headers[key",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authparam",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.handlecriticalresponse(error",{"_index":243,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.handleforbiddenresponse(error",{"_index":242,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.handleunauthorisedresponse(error",{"_index":241,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.handlevalidationresponse(error",{"_index":230,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.http.get(this.sessionurl",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(this.authurl",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate([this.errorrout",{"_index":238,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.router.navigate([this.forbiddenrout",{"_index":234,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.router.navigate([this.loginrout",{"_index":233,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.setidentity(data",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.next(fals",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.next(us",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel(data",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["this[key",{"_index":146,"title":{},"body":{"classes/BaseModel.html":{}}}],["token",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["tort",{"_index":376,"title":{},"body":{"index.html":{}}}],["tri",{"_index":193,"title":{},"body":{"injectables/ErrorService.html":{}}}],["true",{"_index":236,"title":{},"body":{"injectables/ErrorService.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["u2022",{"_index":218,"title":{},"body":{"injectables/ErrorService.html":{}}}],["unauthor",{"_index":172,"title":{},"body":{"injectables/ErrorService.html":{}}}],["unauthorisedmessag",{"_index":156,"title":{},"body":{"injectables/ErrorService.html":{}}}],["undefin",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["url",{"_index":59,"title":{},"body":{"injectables/AuthService.html":{}}}],["urlencod",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{}}}],["us",{"_index":314,"title":{},"body":{"index.html":{}}}],["usag",{"_index":307,"title":{},"body":{"index.html":{}}}],["user",{"_index":29,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdetail",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["usermodel",{"_index":40,"title":{},"body":{"injectables/AuthService.html":{}}}],["usermodel(data",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernam",{"_index":12,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{}}}],["userout",{"_index":185,"title":{},"body":{"injectables/ErrorService.html":{}}}],["usual",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{}}}],["utils/object.to.param",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["valid",{"_index":180,"title":{},"body":{"injectables/ErrorService.html":{}}}],["validationmessag",{"_index":157,"title":{},"body":{"injectables/ErrorService.html":{}}}],["valu",{"_index":42,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["void",{"_index":70,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["warranti",{"_index":357,"title":{},"body":{"index.html":{}}}],["whether",{"_index":373,"title":{},"body":{"index.html":{}}}],["without",{"_index":334,"title":{},"body":{"index.html":{}}}],["work",{"_index":311,"title":{},"body":{"index.html":{}}}],["www",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["x",{"_index":13,"title":{},"body":{"interfaces/AuthRequestInterface.html":{}}}],["ye",{"_index":143,"title":{},"body":{"classes/BaseModel.html":{}}}],["yii2",{"_index":6,"title":{},"body":{"interfaces/AuthRequestInterface.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/ErrorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["zone.j",{"_index":287,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AuthRequestInterface.html":{"url":"interfaces/AuthRequestInterface.html","title":"interface - AuthRequestInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthRequestInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-yii2-rest/src/lib/interfaces/auth-request.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [x: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-yii2-rest/src/lib/interfaces/auth-request.interface.ts:3\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthRequestInterface {\n    username: string;\n    password: string;\n    [x: string]: any;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-yii2-rest/src/lib/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addHeader\n                            \n                            \n                                    Public\n                                authenticate\n                            \n                            \n                                    Protected\n                                    \n                                authParams\n                            \n                            \n                                    Protected\n                                    \n                                authUrl\n                            \n                            \n                                    Public\n                                fetchSession\n                            \n                            \n                                    Public\n                                logOut\n                            \n                            \n                                    Protected\n                                    \n                                sessionParams\n                            \n                            \n                                    Protected\n                                    \n                                sessionUrl\n                            \n                            \n                                    Protected\n                                setIdentity\n                            \n                            \n                                    Protected\n                                    \n                                userModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addHeader(key: string, value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/auth.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Adds header\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     this\n\n                            \n                                \n                                    AuthService\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticate(username: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/auth.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Authenticates the user...\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Observable\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            authParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authParams(params: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/auth.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Returns the payload to send to the auth url.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AuthRequestInterface\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            authUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/auth.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Returns the auth url.\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fetchSession\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fetchSession()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/auth.service.ts:84\n                            \n                        \n\n\n                \n                    \n                            Fetches the data for the user.\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Observable\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/auth.service.ts:119\n                            \n                        \n\n\n                \n                    \n                            Logs the current user out of the system.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            sessionParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sessionParams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/auth.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Returns the session params to send at session url.\n\n\n                            \n                                Returns :     literal type\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            sessionUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sessionUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/auth.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Returns the session url.\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setIdentity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setIdentity(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/auth.service.ts:110\n                            \n                        \n\n\n                \n                    \n                            The data that was fetched from the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            userModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userModel(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/auth.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Returns a model that represents a user of the system (usually UserModel).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     BaseModel\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _headers:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { 'Content-Type': 'application/json', 'Accept': 'application/json' }\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        http:     HttpClient\n\n                    \n                \n                    \n                        \n                            Type :     HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/auth.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/auth.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport objectToParams from '../utils/object.to.params';\nimport {BehaviorSubject} from 'rxjs';\nimport {BaseModel} from '../models/base.model';\nimport {Observable} from 'rxjs';\nimport {AuthRequestInterface} from '../interfaces/auth-request.interface';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class AuthService {\n\n    public http: HttpClient;\n    public user: BehaviorSubject = new BehaviorSubject(null);\n    protected _headers = { 'Content-Type': 'application/json', 'Accept': 'application/json' };\n\n    /**\n     * Returns a model that represents a user of the system (usually UserModel).\n     *\n     * @param data\n     */\n    protected abstract userModel(data: any): BaseModel;\n\n    /**\n     * Returns the session url.\n     */\n    protected abstract sessionUrl(): string;\n\n    /**\n     * Returns the session params to send at session url.\n     */\n    protected abstract sessionParams(): {expand: string};\n\n    /**\n     * Returns the auth url.\n     */\n    protected abstract authUrl(): string;\n\n    /**\n     * Returns the payload to send to the auth url.\n     *\n     * @param params\n     */\n    protected abstract authParams(params: any): AuthRequestInterface;\n\n    /**\n     * Adds header\n     *\n     * @param key\n     * @param value\n     * @returns AuthService\n     */\n    public addHeader(key: string, value: string) {\n        this._headers[key] = value;\n        return this;\n    }\n\n    /**\n     * Authenticates the user...\n     *\n     * @param username\n     * @param password\n     * @returns Observable\n     */\n    public authenticate(username: string, password: string): Observable {\n        const headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n        const options = { headers: headers };\n        const body = this.authParams({\n            username,\n            password\n        });\n\n        // Fetch token from api.\n        return this.http.post(this.authUrl(), objectToParams(body), options);\n    }\n\n  /**\n   * Fetches the data for the user.\n   *\n   * @returns Observable\n   */\n  public fetchSession(): Observable {\n    const headers = new HttpHeaders(this._headers);\n    const options = { headers: headers };\n    const body = objectToParams(this.sessionParams());\n    const userDetails = this.http.get(this.sessionUrl() + '?' + body, options);\n    return userDetails\n      .pipe(\n        map((data: any) => {\n          let user: BaseModel = null;\n          // Logged in?\n          if (data.id !== undefined) {\n            user = this.setIdentity(data);\n          } else {\n            user = false;\n            this.user.next(user);\n          }\n\n          return user;\n        })\n      );\n  }\n\n    /**\n     * The data that was fetched from the server.\n     * @param data\n     */\n    protected setIdentity(data: any) {\n        const user = this.userModel(data);\n        this.user.next(user);\n        return user;\n    }\n\n    /**\n     * Logs the current user out of the system.\n     */\n    public logOut(): void {\n        this.user.next(false);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-yii2-rest/src/lib/models/base.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-yii2-rest/src/lib/models/base.model.ts:1\n                            \n                        \n\n                \n                    \n                            data The data to map to the model.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class BaseModel {\n\n    /**\n     *  data The data to map to the model.\n     */\n    constructor(data?: any) {\n        if (data) {\n            Object.keys(data)\n              .map((key) => {\n                this[key] = data[key];\n              });\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-yii2-rest/src/lib/services/error.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                criticalMessage\n                            \n                            \n                                    Public\n                                errorRoute\n                            \n                            \n                                    Public\n                                forbiddenMessage\n                            \n                            \n                                    Public\n                                forbiddenRoute\n                            \n                            \n                                    Public\n                                loginRoute\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                unAuthorisedMessage\n                            \n                            \n                                    Public\n                                validationMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCriticalResponse\n                            \n                            \n                                handleForbiddenResponse\n                            \n                            \n                                handleUnAuthorisedResponse\n                            \n                            \n                                handleValidationResponse\n                            \n                            \n                                response\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-yii2-rest/src/lib/services/error.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleCriticalResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleCriticalResponse(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/error.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            This handles critical errors responses from server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleForbiddenResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleForbiddenResponse(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/error.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Handles unauthorized access.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleUnAuthorisedResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleUnAuthorisedResponse(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/error.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            Handles when some is required to be logged in but has not passed the router.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleValidationResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleValidationResponse(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/error.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            This handles validations errors that were not caught client side.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            response\n                            \n                            \n                        \n                    \n                \n                \n                    \nresponse(error: any, useRouter: boolean, lastLocation: any, excludeRouter: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/error.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            Generic error response.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        useRouter\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        lastLocation\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        excludeRouter\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            criticalMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        criticalMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'There was a problem with server. Please try again later.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/error.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorRoute:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/500'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/error.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forbiddenMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        forbiddenMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Your request is lacking the required permissions.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/error.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forbiddenRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        forbiddenRoute:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/403'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/error.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginRoute:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/login'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/error.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/error.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unAuthorisedMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unAuthorisedMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Please login and try again.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/error.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validationMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validationMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'There were some validation issues with your request.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-yii2-rest/src/lib/services/error.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Injectable()\nexport class ErrorService {\n\n    public loginRoute = '/login';\n    public errorRoute = '/500';\n    public forbiddenRoute = '/403';\n    public criticalMessage = 'There was a problem with server. Please try again later.';\n    public forbiddenMessage = 'Your request is lacking the required permissions.';\n    public unAuthorisedMessage = 'Please login and try again.';\n    public validationMessage = 'There were some validation issues with your request.';\n\n    constructor(public router: Router) {}\n\n    /**\n     * This handles critical errors responses from server.\n     *\n     * @param error\n     */\n    handleCriticalResponse(error: any) {\n        alert(this.criticalMessage);\n    }\n\n    /**\n     * This handles validations errors that were not caught client side.\n     *\n     * @param error\n     */\n    handleValidationResponse(error: any) {\n        const messages = error.error.map((item: any) => {\n            return item.message;\n        });\n        alert(this.validationMessage + `\\n\\n \\u2022 ` + messages.join(`\\n \\u2022 `));\n    }\n\n    /**\n     * Handles unauthorized access.\n     *\n     * @param error\n     */\n    handleForbiddenResponse(error: any) {\n        alert(this.forbiddenMessage);\n    }\n\n    /**\n     * Handles when some is required to be logged in but has not passed the router.\n     *\n     * @param error\n     */\n    handleUnAuthorisedResponse(error: any) {\n        alert(this.unAuthorisedMessage);\n    }\n\n    /**\n     * Generic error response.\n     *\n     * @param error\n     * @param useRouter\n     * @param lastLocation\n     * @param excludeRouter\n     */\n    response(error: any, useRouter: boolean = false, lastLocation: any = null, excludeRouter: any = []) {\n\n        const queryParams = {};\n        if (lastLocation) {\n            queryParams.lastLocation = lastLocation;\n        }\n\n        if (useRouter && excludeRouter.indexOf(error.status) === -1) {\n            if (error.status) {\n                switch (error.status) {\n                    case 422:\n                        this.handleValidationResponse(error);\n                        break;\n                    case 401:\n                        this.router.navigate([this.loginRoute]);\n                        break;\n                    case 403:\n                        this.router.navigate([this.forbiddenRoute], {\n                            skipLocationChange: true,\n                            queryParams: queryParams\n                        });\n                        break;\n                    case 500:\n                      console.error(error);\n                      this.router.navigate([this.errorRoute], {\n                          skipLocationChange: true,\n                          queryParams: queryParams\n                      });\n                      break;\n                    default:\n                      console.error(error);\n                      break;\n                }\n            } else {\n              console.error(error);\n              if (excludeRouter.indexOf('no-status') === -1) {\n                this.router.navigate([this.errorRoute], {\n                  skipLocationChange: true,\n                  queryParams: queryParams\n                });\n              }\n            }\n        } else {\n            if (error.status) {\n                switch (error.status) {\n                    case 422:\n                        this.handleValidationResponse(error);\n                        break;\n                    case 401:\n                        this.handleUnAuthorisedResponse(error);\n                        break;\n                    case 403:\n                        this.handleForbiddenResponse(error);\n                        break;\n                    default:\n                    case 500:\n                        this.handleCriticalResponse(error);\n                        break;\n                }\n            } else {\n                this.handleCriticalResponse(error);\n            }\n            console.error(error);\n\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    projects/ngx-yii2-rest/src/lib/interfaces/auth-request.interface.ts\n            \n            \n                interface\n            \n            \n                AuthRequestInterface\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    projects/ngx-yii2-rest/src/lib/models/base.model.ts\n            \n            \n                class\n            \n            \n                BaseModel\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    projects/ngx-yii2-rest/src/lib/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                71 %\n                (10/14)\n            \n        \n        \n            \n                \n                    projects/ngx-yii2-rest/src/lib/services/end-point.service.ts\n            \n            \n                injectable\n            \n            \n                EndPointService\n            \n            \n                93 %\n                (27/29)\n            \n        \n        \n            \n                \n                    projects/ngx-yii2-rest/src/lib/services/error.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorService\n            \n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                    projects/ngx-yii2-rest/src/lib/utils/is.js.object.ts\n            \n            \n                function\n            \n            \n                isJsObject\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ngx-yii2-rest/src/lib/utils/is.primative.ts\n            \n            \n                function\n            \n            \n                isPrimitive\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/ngx-yii2-rest/src/lib/utils/object.to.params.ts\n            \n            \n                function\n            \n            \n                objectToParams\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isJsObject   (projects/.../is.js.object.ts)\n                        \n                        \n                            isPrimitive   (projects/.../is.primative.ts)\n                        \n                        \n                            objectToParams   (projects/.../object.to.params.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-yii2-rest/src/lib/utils/is.js.object.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isJsObject\n                            \n                            \n                        \n                    \n                \n                \n                    \nisJsObject(o: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/ngx-yii2-rest/src/lib/utils/is.primative.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isPrimitive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisPrimitive(obj: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/ngx-yii2-rest/src/lib/utils/object.to.params.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            objectToParams\n                            \n                            \n                        \n                    \n                \n                \n                    \nobjectToParams(object: any)\n                    \n                \n\n\n\n\n                \n                    \n                            Converts an object to a parametrised string.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nAngular Libraries\n_A group of libraries for everyday angular usage.\nSome documentation has been added at https://damiandennis.github.io/ngx-libraries/\nThere will be more work done to make this documentation more useful in the near future.\n\nThe MIT License (MIT)\n\n\nCopyright (c) 2015 Damian Dennis\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        3 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
